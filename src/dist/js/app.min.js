function Trader(e,t,r,a,o){this.name=e,this.amount=t,this.inAt=r,this.comment=o,this.type=a,this.difference=0,this.drawable=new Drawable,this.drawable.color="#ffffff",this.drawable.borderColor="#B3B369",this.drawable.borderWidth=2,this.drawable.borderScaling=!1,this.drawable.textFont="SourceSansPro",this.drawable.textAnchor=new Vector2D(0,1),this.drawable.textBackground="#ffffff",this.drawable.textPadding=new Vector2D(0,0),this.drawable.textScaling=!1,this.drawable.textPos=new Vector2D(1,-1),this.drawable.textColor="#2C3E50",this.drawable.pos=new Vector2D(0,0),this.drawable.radius=25,this.drawable.show=!1,this["new"]=!0,this.open=!1,this.changeStockPrice=function(e){var a="[b]"+this.name+"[/b][align=right][color=",o=Math.floor((e-this.inAt)*this.amount*100)/100,i="#36B5DB",n="#E74C3C";0===this.type?this.difference=o:this.difference=-o,a+=this.difference>=0?i+"]":n+"]",a+=this.difference.toLocaleString("be-NL",{style:"currency",currency:"EUR"})+"[/color][/align]\n[i][color=",a+=0===this.type?i+"]":n+"]",a+=t,a+=0===this.type?" long at ":" short at ",a+=r.toLocaleString("be-NL",{style:"currency",currency:"EUR"})+"[/color][/i]\n",this.drawable.setText(a+this.comment)},this.draw=function(e,t){if(this.drawable.show){var r=this.drawable.pos.rotate(this.drawable.rotation);e.save(),e.globalAlpha*=this.drawable.opacity,e.translate(r.x,r.y),this.drawable.drawCircle(e),this.drawable.drawImageInCircle(e),this.drawable.drawBorderForCircle(e,t),e.restore()}},this.postDraw=function(e,t){if(this.drawable.show){var r=this.drawable.pos.rotate(this.drawable.rotation);e.save(),e.globalAlpha*=this.drawable.opacity,e.translate(r.x,r.y),this.drawable.drawText(e,t),e.restore()}},this.clicked=function(){var e=this;this.open?(this.drawable.animate("textSize",0,200,"easeInOut",null),this.drawable.animateVector("textPadding",new Vector2D(0,0),200,"easeInOut",function(t,r){t&&(e.open=!1)})):(this.drawable.animate("textSize",12,200,"easeInOut",null),this.drawable.animateVector("textPadding",new Vector2D(10,10),200,"easeInOut",function(t,r){t&&(e.open=!0)}))},this["delete"]=function(e,t){var r=0;"undefined"!=typeof t&&(r=t);for(var a=e.length;a>r;r++)if("undefined"!=typeof e[r].traders){var o=e[r].traders.indexOf(this);if(o>-1){e[r].traders.splice(o,1),e[r].calcTraders(),0===e[r].traders.length&&e[r].animateDelete(e,r);break}}},this.interaction=function(e,t){var r=e.subVector(this.drawable.pos.rotate(this.drawable.rotation).mul(t)),a=0;return 0!==this.drawable.radius&&(a=this.drawable.radius*t),0!==this.drawable.size.length()&&(a=this.drawable.size.length()*t),r.length()<=a&&this.drawable.show?(this["new"]&&(this["new"]=!1,this.drawable.borderColor="#eeeeee"),this):!1}}var Trade=function(e,r,a){this.stockPrice=e,this.traders=r,this.drawable=new Drawable,this.difference=0;for(var o=0,i=this.traders.length;i>o;o++)this.traders[o].changeStockPrice(this.stockPrice),this.difference+=this.traders[o].difference;if(this.difference=Math.floor(100*this.difference)/100,this.drawable.setText(this.difference.toLocaleString("be-NL",{style:"currency",currency:"EUR"})),this.difference>=0?(this.drawable.textBackground="#36B5DB",this.drawable.textReplaceColor="#36B5DB"):(this.drawable.textBackground="#E74C3C",this.drawable.textReplaceColor="#E74C3C"),this.lineColor="#B3B369",this.open=!1,this.drawable.textSize=10,this.drawable.radius=Math.floor(35*Math.random()+35),this.drawable.imgFill=!1,null===a){for(var n=Math.floor(Math.random()*window.innerWidth-window.innerWidth/2),s=Math.floor(Math.random()*(window.innerHeight-50)-(window.innerHeight-50)/2);new Vector2D(n,s).length()<100+this.drawable.radius||new Vector2D(n,s).length()>new Vector2D(window.innerWidth,window.innerHeight-50).div(2).length()-this.drawable.radius;)n=Math.floor(Math.random()*window.innerWidth-window.innerWidth/2),s=Math.floor(Math.random()*(window.innerHeight-50)-(window.innerHeight-50)/2);this.drawable.animateVector("pos",new Vector2D(n,s),1e3,"easeInOut",null)}else this.drawable.animateVector("pos",a,1e3,"easeInOut",null);this.drawable.color="#ffffff",this.drawable.borderWidth=2,this.drawable.borderColor="#B3B369",this.drawable.borderScaling=!1,this.drawable.textColor="#ffffff",this.drawable.textFont="SourceSansPro",this.drawable.textAnchor=new Vector2D(.5,.5),this.drawable.textPos=new Vector2D(0,.5),this.drawable.textPadding=new Vector2D(10,10),this.drawable.textReplace=15;var l=this;setInterval(function(){var e=Math.random()/10,t=Math.floor(2*Math.random());1===t&&(e=-e),l.stockPrice=Math.floor(100*(l.stockPrice+e))/100,l.difference=0;for(var r=0,a=l.traders.length;a>r;r++)l.traders[r].changeStockPrice(l.stockPrice),l.difference+=l.traders[r].difference;l.difference=Math.floor(100*l.difference)/100,l.open?(l.difference>=0?l.drawable.textReplaceColor="#36B5DB":l.drawable.textReplaceColor="#E74C3C",l.drawable.textBackground="#2C3E50",l.drawable.setText(l.stockPrice.toLocaleString("be-NL",{style:"currency",currency:"EUR"}))):(l.drawable.setText(l.difference.toLocaleString("be-NL",{style:"currency",currency:"EUR"})),l.difference>=0?(l.drawable.textBackground="#36B5DB",l.drawable.textReplaceColor="#36B5DB"):(l.drawable.textBackground="#E74C3C",l.drawable.textReplaceColor="#E74C3C")),l.drawable.requestRedraw=!0},2e3),this.interaction=function(e,r){var a=e.subVector(this.drawable.pos.mul(r)),o=0;if(0!==this.drawable.radius&&(o=this.drawable.radius*r),0!==this.drawable.size.length()&&(o=this.drawable.size.length()*r),a.length()<=o)return this;for(var i=e.subVector(this.drawable.pos.mul(r)),n=0,s=this.traders.length;s>n;n++){var l=this.traders[n].interaction(i,r);if(l!==!1){for(var d=0,c=this.traders.length;c>d;d++)t=this.traders[d],t.open&&t.clicked();return l}}return!1},this.calcTraders=function(){for(var e=180/(this.traders.length+1),t=0,r=this.traders.length;r>t;t++){var a=e*(t+1-(this.traders.length+1)/2)-90;this.traders[t].drawable.animate("rotation",a,300,"easeInOut",null)}},this.calcTraders(),this.preDraw=function(e,t){if(this.drawable.show){e.save(),e.globalAlpha*=this.drawable.opacity,e.strokeStyle=this.lineColor,e.lineWidth=.5;for(var r=!1,a=0,o=this.traders.length;o>a;a++)this.traders[a]["new"]&&(r=!0);r?this.lineColor="#B3B369":this.lineColor="#2C3E50",e.beginPath(),e.moveTo(0,0),e.lineTo(this.drawable.pos.x,this.drawable.pos.y),e.closePath(),e.stroke(),e.restore()}},this.draw=function(e,t){if(this.drawable.show){e.save(),e.translate(this.drawable.pos.x,this.drawable.pos.y),e.globalAlpha*=this.drawable.opacity;for(var r=!1,a=0,o=this.traders.length;o>a;a++)this.traders[a].draw(e,t),this.traders[a]["new"]&&(r=!0);r?this.drawable.borderColor="#B3B369":this.drawable.borderColor="#eeeeee",this.drawable.drawCircle(e),this.drawable.drawImageInCircle(e),this.drawable.drawBorderForCircle(e,t),this.drawable.drawText(e,t),e.restore()}},this["delete"]=function(e){for(var t=e.indexOf(this),r=0,a=this.traders.length;a>r;r++)this.traders[0]["delete"](e,t)},this.animateDelete=function(e,t){this.drawable.animate("textSize",0,300,"easeInOut",null),this.drawable.animate("textReplace",0,300,"easeInOut",null),this.drawable.animateVector("textPadding",new Vector2D(0,0),300,"easeInOut",null),this.drawable.animate("opacity",0,300,"easeInOut",null),this.drawable.animate("radius",0,300,"easeInOut",function(){e.splice(t,1)})},this.postDraw=function(e,t){if(this.drawable.show){e.save(),e.globalAlpha*=this.drawable.opacity,e.translate(this.drawable.pos.x,this.drawable.pos.y);for(var r=0,a=this.traders.length;a>r;r++)this.traders[r].postDraw(e,t);e.restore()}},this.clicked=function(){var e=0,t=0,r=null,a=this;if(this.open){var o=function(e,t){t.show=!1};for(t=this.traders.length;t>e;e++)r=this.traders[e],r.open&&r.clicked(),r.drawable.animateVector("pos",new Vector2D(0,0),300,"easeInOut",o);this.drawable.animateVector("textPadding",new Vector2D(0,0),150,"easeIn",function(e,t){t.animateVector("textPadding",new Vector2D(10,10),150,"easeOut",null)}),this.drawable.animate("textReplace",0,150,"easeIn",function(e,t){t.animate("textReplace",15,150,"easeOut",null)}),this.drawable.animate("textSize",0,150,"easeIn",function(e,t){t.setText(a.difference.toLocaleString("be-NL",{style:"currency",currency:"EUR"})),a.difference>=0?t.textBackground="#36B5DB":t.textBackground="#E74C3C",a.open=!1,t.animate("textSize",10,150,"easeOut",null)})}else{for(t=this.traders.length;t>e;e++)r=this.traders[e],r.drawable.show=!0,r.drawable.animateVector("pos",new Vector2D(0,this.drawable.radius+r.drawable.radius+15),300,"easeInOut",null);this.drawable.animateVector("textPadding",new Vector2D(0,0),150,"easeIn",function(e,t){t.animateVector("textPadding",new Vector2D(10,10),150,"easeOut",null)}),this.drawable.animate("textReplace",0,150,"easeIn",function(e,t){t.animate("textReplace",15,150,"easeOut",null)}),this.drawable.animate("textSize",0,150,"easeIn",function(e,t){t.textBackground="#2C3E50",t.setText(a.stockPrice.toLocaleString("be-NL",{style:"currency",currency:"EUR"})),a.open=!0,t.animate("textSize",10,150,"easeOut",null)})}},this.requestRedraw=function(){for(var e=0,t=this.traders.length;t>e;e++)this.traders[e].drawable.requestRedraw&&(this.drawable.requestRedraw=!0,this.traders[e].drawable.requestRedraw=!1);return this.drawable.requestRedraw?(this.drawable.requestRedraw=!1,!0):!1}},trades=[],traders=[],profile=new Drawable,trash=new Drawable,logos=["logo0.svg","logo1.svg","logo2.svg","logo3.svg","logo4.svg"],people=[["Crazy Heffe","trader0.jpg"],["Marino Hostino","trader1.jpg"],["Nicolsh Lavanda","trader2.jpg"],["xXrobke69Xx","trader3.jpg"]];!function(){profile.setImage("dist/images/profiles/profile.jpg"),profile.radius=100,profile.color="#ffffff",profile.borderColor="#eeeeee",profile.borderScaling=!1,profile.borderWidth=2,profile.textSize=12,profile.textColor="#ffffff",profile.textFont="SourceSansPro",profile.textAnchor=new Vector2D(.5,.5),profile.textPos=new Vector2D(0,.5),profile.textPadding=new Vector2D(10,10),profile.textReplace=15,trash.setImage("dist/images/misc/trash.svg"),trash.radius=50,trash.color="#eeeeee",trash.borderColor="#eeeeee",trash.borderScaling=!1,trash.borderWidth=2,trash.pos=new Vector2D(window.innerWidth-100,window.innerHeight-150);for(var e=0;4>e;e++){var t=Math.floor(50*Math.random()),r=Math.floor(2e4*Math.random())/100,a=Math.floor(2*Math.random()),o=[t,r,a];traders.push(o)}for(var i=0,n=0;5>n;n++){for(var s=Math.ceil(4*Math.random()),l=[],d=Math.floor(200*Math.random()*100)/100,c=0;s>c;c++){var h=new Trader(people[c][0],traders[c][0],traders[c][1],traders[c][2],"This looks good!\nI can even put a second line\n\nAnd even more");h.drawable.setImage("dist/images/profiles/"+people[c][1],function(){f.draw()}),h.percentage=.4*Math.random()+.1,l.push(h)}var w=new Trade(d,l,null);i+=w.difference,w.drawable.setImage("dist/images/logos/"+logos[n],function(){f.draw()}),trades.push(w)}trades.push(profile),trades.push(trash),i>=0?(profile.textBackground="#36B5DB",profile.textReplaceColor="#36B5DB"):(profile.textBackground="#E74C3C",profile.textReplaceColor="#E74C3C"),profile.setText((Math.floor(100*i)/100).toLocaleString("be-NL",{style:"currency",currency:"EUR"}));var f=new Canvas(0,50,window.innerWidth,window.innerHeight-50,"trades",trades);f.drawCallback=function(){for(var e=0,t=0,r=f.objects.length;r>t;t++)"undefined"!=typeof f.objects[t].difference&&(e+=f.objects[t].difference);e>=0?(profile.textBackground="#36B5DB",profile.textReplaceColor="#36B5DB"):(profile.textBackground="#E74C3C",profile.textReplaceColor="#E74C3C"),profile.setText((Math.floor(100*e)/100).toLocaleString("be-NL",{style:"currency",currency:"EUR"}))},profile.draw=function(e,t){this.drawCircle(e),this.drawImageInCircle(e),this.drawBorderForCircle(e,t),this.drawText(e,t)},trash.interaction=function(e){var t=e.subVector(f.margin).subVector(this.pos),r=this.radius*f.scale;return t.length()<=r&&this.show},trash.draw=function(e,t){var r=this.pos.subVector(f.offset).subVector(f.center).mul(1/f.scale);e.save(),e.translate(r.x,r.y),this.drawCircle(e),this.drawImageInCircle(e),this.drawBorderForCircle(e,t),e.restore()},f.draw(),document.getElementById("trades").addEventListener("mousedown",function(e){u(e)}),document.getElementById("trades").addEventListener("touchstart",function(e){var t=e.touches[0];u(t)});var u=function(e){f.interactionStart(e,function(e,t){var r;e instanceof Trade&&(r=f.objects.indexOf(e),f.objects.push(f.objects.splice(r,1)[0])),e instanceof Trader&&(e.drawable.returnPos=e.drawable.pos),"self"===e&&(r=f.objects.indexOf(trash),f.objects.splice(r,1),f.objects.push(trash),f.draw()),f.selected=e,f.mousePos=t})};document.getElementById("trades").addEventListener("mousemove",function(e){b(e)}),document.getElementById("trades").addEventListener("touchmove",function(e){var t=e.touches[0];b(t)});var b=function(e){f.interactionMove(e,function(t,r,a){t instanceof Trade&&(t.drawable.opacity=.5,t.drawable.pos=r),t instanceof Trader&&(t.drawable.opacity=.5,t.drawable.pos=t.drawable.pos.addVector(a.rotate(-t.drawable.rotation).mul(1/f.scale))),trash.interaction(new Vector2D(e.pageX,e.pageY))?trash.color="#E74C3C":trash.color="#eeeeee",f.draw()})};document.getElementById("trades").addEventListener("mouseup",function(e){p(e)}),document.getElementById("trades").addEventListener("touchend",function(e){var t=e.touches[0];p(t)}),document.body.addEventListener("touchstart",function(e){e.preventDefault()});var p=function(e){f.interactionStop(function(t,r){var a,o;if(t){if(r instanceof Trade)for(r.drawable.opacity=1,a=0,o=f.objects.length;o>a;a++)f.objects[a].open&&f.objects[a]!==r&&f.objects[a].clicked();if(r instanceof Trader&&(r.drawable.opacity=1),"self"===r)for(a=0,o=f.objects.length;o>a;a++)f.objects[a].open&&f.objects[a].clicked();"function"==typeof r.clicked&&r.clicked()}else r instanceof Trade&&(r.drawable.opacity=1,trash.interaction(new Vector2D(e.pageX,e.pageY))&&r["delete"](f.objects)),r instanceof Trader&&(r.drawable.opacity=1,r.drawable.returnPos.length()!==r.drawable.pos.length()&&r.drawable.returnPos.x!==r.drawable.pos.x&&r.drawable.animateVector("pos",r.drawable.returnPos,500,"easeInOut",null),trash.interaction(new Vector2D(e.pageX,e.pageY))&&r["delete"](f.objects));trash.color="#eeeeee"}),f.draw()};document.getElementById("resetOffset").addEventListener("click",function(){f.moveToCenter()}),document.getElementById("scaleCanvas").addEventListener("mousemove",function(){f.scale=this.value,trash.radius=50/f.scale,f.draw()})}(),function(){"use strict";var e=angular.module("app",["ngRoute"]);e.config(function(e){e.when("/home",{templateUrl:"pages/home.html",controller:"mainController"}).when("/profile/:id",{templateUrl:"pages/profile.html",controller:"profileController"}).when("/balanceHistory/:id",{templateUrl:"pages/balanceHistory.html",controller:"balanceController"}).when("/deposit/:id",{templateUrl:"pages/deposit.html",controller:"balanceController"}).when("/withdraw/:id",{templateUrl:"pages/withdraw.html",controller:"balanceController"}).otherwise({redirectTo:"/home"})})}(),function(){"use strict";var e=function(e,t,r){e.user={},e.user.userId="1",e.user.firstName="Marijn",e.user.lastName="Hosten",e.user.depositAmount=0,e.user.currentAmount=2e3,e.deposit=function(t){e.user.currentAmount+=t.depositAmount,r.location.hash="/home"},e.isEnabled=function(){return 0===e.user.depositAmount||"undefined"==typeof e.user.depositAmount?!0:!1}};angular.module("app").controller("balanceController",["$scope","$routeParams","$window",e])}(),function(){"use strict";var e=function(e){e.user={},e.user.userId="1",e.user.firstName="Marijn",e.user.lastName="Hosten",e.user.currentAmount=2e3;var t={id:9,firstName:"Anna",lastName:"Abcd",followers:27},r={id:2,firstName:"Bob",lastName:"Abcd",followers:28},a={id:3,firstName:"Christine",lastName:"Abcd",followers:105},o={id:4,firstName:"Dave",lastName:"Abcd",followers:30},i={id:5,firstName:"Eric",lastName:"Abcd",followers:2},n={id:6,firstName:"Francis",lastName:"Abcd",followers:0},s={id:7,firstName:"Gaben",lastName:"Abcd",followers:299},l={id:8,firstName:"Harold",lastName:"Abcd",followers:4};e.traders=[t,r,a,o,i,n,s,l]};angular.module("app").controller("mainController",["$scope",e])}(),function(){"use strict";var e=function(e,t,r,a){var o=t.id;e.user=a.getById(o),e.isEnabled=function(){return!1},e.submitForm=function(e){alert("changes saved"),r.location.hash="/home"}};angular.module("app").controller("profileController",["$scope","$routeParams","$window","userService",e])}();
//# sourceMappingURL=data:application/json;base64,
