function Trader(e,t,r,a,o){this.name=e,this.amount=t,this.inAt=r,this.comment=o,this.type=a,this.difference=0,this.drawable=new Drawable,this.drawable.color="#ffffff",this.drawable.borderColor="#eeeeee",this.drawable.borderWidth=2,this.drawable.borderScaling=!1,this.drawable.textFont="SourceSansPro",this.drawable.textAnchor=new Vector2D(0,1),this.drawable.textBackground="#ffffff",this.drawable.textPadding=new Vector2D(0,0),this.drawable.textScaling=!1,this.drawable.textPos=new Vector2D(1,-1),this.drawable.textColor="#2C3E50",this.drawable.pos=new Vector2D(0,0),this.drawable.radius=25,this.drawable.show=!1,this.open=!1,this.requestPartial=!1,this.changeStockPrice=function(e){var a="[b]"+this.name+"[/b][align=right][color=",o=Math.floor((e-this.inAt)*this.amount*100)/100,i="#36B5DB",s="#E74C3C";0===this.type?this.difference=o:this.difference=-o,a+=this.difference>=0?i+"]":s+"]",a+=this.difference.toLocaleString("be-NL",{style:"currency",currency:"EUR"})+"[/color][/align]\n[i][color=",a+=0===this.type?i+"]":s+"]",a+=t,a+=0===this.type?" long at ":" short at ",a+=r.toLocaleString("be-NL",{style:"currency",currency:"EUR"})+"[/color][/i]\n",this.drawable.setText(a+this.comment)},this.draw=function(e,t,r){if(this.drawable.show){var a=this.drawable.pos;this.drawable.pos=this.drawable.pos.rotate(r-90),e.save(),e.translate(this.drawable.pos.x,this.drawable.pos.y),this.drawable.drawCircle(e),this.drawable.drawImageInCircle(e),this.drawable.drawBorderForCircle(e,t),e.restore(),this.drawable.pos=a}},this.postDraw=function(e,t,r){if(this.drawable.show){var a=this.drawable.pos;this.drawable.pos=this.drawable.pos.rotate(r-90),e.save(),e.translate(this.drawable.pos.x,this.drawable.pos.y),this.drawable.drawText(e,t),e.restore(),this.drawable.pos=a}},this.clicked=function(){var e=this;this.open?(this.drawable.animate("textSize",0,200,"easeInOut",null),this.drawable.animateVector("textPadding",new Vector2D(0,0),200,"easeInOut",function(t,r){t&&(e.open=!1)})):(this.drawable.animate("textSize",12,200,"easeInOut",null),this.drawable.animateVector("textPadding",new Vector2D(10,10),200,"easeInOut",function(t,r){t&&(e.open=!0)}))},this.interaction=function(e,t,r){var a=e.subVector(this.drawable.pos.rotate(r-90).mul(t)),o=0;return 0!==this.drawable.radius&&(o=this.drawable.radius*t),0!==this.drawable.size.length()&&(o=this.drawable.size.length()*t),a.length()<=o&&this.drawable.show?this:!1}}var Trade=function(e,r){this.stockPrice=e,this.traders=r,this.drawable=new Drawable,this.difference=0;for(var a=0,o=this.traders.length;o>a;a++)this.traders[a].changeStockPrice(this.stockPrice),this.difference+=this.traders[a].difference;this.difference=Math.floor(100*this.difference)/100,this.drawable.setText(this.difference.toLocaleString("be-NL",{style:"currency",currency:"EUR"})),this.difference>=0?(this.drawable.textBackground="#36B5DB",this.drawable.textReplaceColor="#36B5DB"):(this.drawable.textBackground="#E74C3C",this.drawable.textReplaceColor="#E74C3C"),this.reqPartial=!1,this["new"]=!0,this.lineColor="#B3B369",this.open=!1,this.drawable.textSize=10,this.drawable.imgFill=!1;var i=Math.floor(Math.random()*window.innerWidth-window.innerWidth/2),s=Math.floor(Math.random()*(window.innerHeight-50)-(window.innerHeight-50)/2);this.drawable.pos=new Vector2D(i,s),this.drawable.radius=Math.floor(35*Math.random()+35),this.drawable.color="#ffffff",this.drawable.borderWidth=2,this.drawable.borderColor="#B3B369",this.drawable.borderScaling=!1,this.drawable.textColor="#ffffff",this.drawable.textFont="SourceSansPro",this.drawable.textAnchor=new Vector2D(.5,.5),this.drawable.textPos=new Vector2D(0,.5),this.drawable.textPadding=new Vector2D(10,10),this.drawable.textReplace=15;var n=this;setInterval(function(){var e=Math.random()/10,t=Math.floor(2*Math.random());1===t&&(e=-e),n.stockPrice=Math.floor(100*(n.stockPrice+e))/100,n.difference=0;for(var r=0,a=n.traders.length;a>r;r++)n.traders[r].changeStockPrice(n.stockPrice),n.difference+=n.traders[r].difference;n.difference=Math.floor(100*n.difference)/100,n.open?(n.difference>=0?n.drawable.textReplaceColor="#36B5DB":n.drawable.textReplaceColor="#E74C3C",n.drawable.textBackground="#2C3E50",n.drawable.setText(n.stockPrice.toLocaleString("be-NL",{style:"currency",currency:"EUR"}))):(n.drawable.setText(n.difference.toLocaleString("be-NL",{style:"currency",currency:"EUR"})),n.difference>=0?(n.drawable.textBackground="#36B5DB",n.drawable.textReplaceColor="#36B5DB"):(n.drawable.textBackground="#E74C3C",n.drawable.textReplaceColor="#E74C3C")),n.reqPartial=!0},2e3),this.interaction=function(e,r){var a=e.subVector(this.drawable.pos.mul(r)),o=0;if(0!==this.drawable.radius&&(o=this.drawable.radius*r),0!==this.drawable.size.length()&&(o=this.drawable.size.length()*r),a.length()<=o)return this["new"]&&(this["new"]=!1,this.drawable.borderColor="#eeeeee",this.lineColor="#2C3E50"),this;for(var i=e.subVector(this.drawable.pos.mul(r)),s=180/(this.traders.length+1),n=0,l=this.traders.length;l>n;n++){var d=s*(n+1-(this.traders.length+1)/2),c=this.traders[n].interaction(i,r,d);if(c!==!1){for(var h=0,f=this.traders.length;f>h;h++)t=this.traders[h],t.open&&t.clicked();return c}}return!1},this.preDraw=function(e,t){this.drawable.show&&(e.strokeStyle=this.lineColor,e.lineWidth=.5,e.beginPath(),e.moveTo(0,0),e.lineTo(this.drawable.pos.x,this.drawable.pos.y),e.closePath(),e.stroke())},this.draw=function(e,t){if(this.drawable.show){e.save(),e.translate(this.drawable.pos.x,this.drawable.pos.y);for(var r=180/(this.traders.length+1),a=0,o=this.traders.length;o>a;a++){var i=r*(a+1-(this.traders.length+1)/2);this.traders[a].draw(e,t,i)}this.drawable.drawCircle(e),this.drawable.drawImageInCircle(e),this.drawable.drawBorderForCircle(e,t),this.drawable.drawText(e,t),e.restore()}},this.postDraw=function(e,t){if(this.drawable.show){e.save(),e.translate(this.drawable.pos.x,this.drawable.pos.y);for(var r=180/(this.traders.length+1),a=0,o=this.traders.length;o>a;a++){var i=r*(a+1-(this.traders.length+1)/2);this.traders[a].postDraw(e,t,i)}e.restore()}},this.partial=function(e,t){if(this.drawable.show){e.save(),e.translate(this.drawable.pos.x,this.drawable.pos.y);for(var r=180/(this.traders.length+1),a=0,o=this.traders.length;o>a;a++){var i=r*(a+1-(this.traders.length+1)/2);this.traders[a].postDraw(e,t,i)}this.drawable.textSize*t>=this.drawable.textMinSize&&this.drawable.drawText(e,t),e.restore()}},this.clicked=function(){var e=0,t=0,r=null,a=this;if(this.open){for(t=this.traders.length;t>e;e++)r=this.traders[e],r.open&&r.clicked(),r.drawable.animateVector("pos",new Vector2D(0,0),300,"easeInOut",null);this.drawable.animateVector("textPadding",new Vector2D(0,0),150,"easeIn",function(e,t){t.animateVector("textPadding",new Vector2D(10,10),150,"easeOut",null)}),this.drawable.animate("textSize",0,150,"easeIn",function(e,t){t.setText(a.difference.toLocaleString("be-NL",{style:"currency",currency:"EUR"})),a.difference>=0?t.textBackground="#36B5DB":t.textBackground="#E74C3C",a.open=!1,t.animate("textSize",10,150,"easeOut",null)})}else{for(t=this.traders.length;t>e;e++)r=this.traders[e],r.drawable.show=!0,r.drawable.animateVector("pos",new Vector2D(0,this.drawable.radius+r.drawable.radius+15),300,"easeInOut",null);this.drawable.animateVector("textPadding",new Vector2D(0,0),150,"easeIn",function(e,t){t.animateVector("textPadding",new Vector2D(10,10),150,"easeOut",null)}),this.drawable.animate("textSize",0,150,"easeIn",function(e,t){t.textBackground="#2C3E50",t.setText(a.stockPrice.toLocaleString("be-NL",{style:"currency",currency:"EUR"})),a.open=!0,t.animate("textSize",10,150,"easeOut",null)})}},this.requestRedraw=function(){for(var e=0,t=this.traders.length;t>e;e++)this.traders[e].drawable.requestRedraw&&(this.drawable.requestRedraw=!0,this.traders[e].drawable.requestRedraw=!1);return this.drawable.requestRedraw?(this.drawable.requestRedraw=!1,!0):!1},this.requestPartial=function(){for(var e=0,t=this.traders.length;t>e;e++)if(this.traders[e].requestPartial)return!0;return this.reqPartial}},trades=[],traders=[],profile=new Drawable,logos=["logo0.svg","logo1.svg","logo2.svg","logo3.svg","logo4.svg"],people=[["Crazy Heffe","trader0.jpg"],["Marino Hostino","trader1.jpg"],["Nicolsh Lavanda","trader2.jpg"],["xXrobke69Xx","trader3.jpg"]];!function(){profile.setImage("dist/images/profile.jpg"),profile.radius=100,profile.color="#ffffff",profile.borderColor="#eeeeee",profile.borderScaling=!1,profile.borderWidth=2,profile.textSize=12,profile.textColor="#ffffff",profile.textFont="SourceSansPro",profile.textAnchor=new Vector2D(.5,.5),profile.textPos=new Vector2D(0,.5),profile.textPadding=new Vector2D(10,10),profile.textReplace=15,trades.push(profile);for(var e=0;4>e;e++){var t=Math.floor(50*Math.random()),r=Math.floor(2e4*Math.random())/100,a=Math.floor(2*Math.random()),o=[t,r,a];traders.push(o)}for(var i=0,s=0;5>s;s++){for(var n=Math.ceil(4*Math.random()),l=[],d=Math.floor(200*Math.random()*100)/100,c=0;n>c;c++){var h=new Trader(people[c][0],traders[c][0],traders[c][1],traders[c][2],"This looks good!\nI can even put a second line\n\nAnd even more");h.drawable.setImage("dist/images/"+people[c][1],function(){w.draw()}),h.percentage=.4*Math.random()+.1,l.push(h)}var f=new Trade(d,l);i+=f.difference,f.drawable.setImage("dist/images/"+logos[s],function(){w.draw()}),trades.push(f)}i>=0?(profile.textBackground="#36B5DB",profile.textReplaceColor="#36B5DB"):(profile.textBackground="#E74C3C",profile.textReplaceColor="#E74C3C"),profile.setText((Math.floor(100*i)/100).toLocaleString("be-NL",{style:"currency",currency:"EUR"}));var w=new Canvas(0,50,window.innerWidth,window.innerHeight-50,"trades",trades);w.partialCallback=function(){for(var e=0,t=1,r=w.objects.length;r>t;t++)e+=w.objects[t].difference;e>=0?(w.objects[0].textBackground="#36B5DB",w.objects[0].textReplaceColor="#36B5DB"):(w.objects[0].textBackground="#E74C3C",w.objects[0].textReplaceColor="#E74C3C"),w.objects[0].setText((Math.floor(100*e)/100).toLocaleString("be-NL",{style:"currency",currency:"EUR"})),w.objects[0].drawText(w.ctx,w.scale)},profile.draw=function(e,t){this.drawCircle(e),this.drawImageInCircle(e),this.drawBorderForCircle(e,t),this.drawText(e,t)},w.draw(),document.getElementById("trades").addEventListener("mousedown",function(e){u(e)}),document.getElementById("trades").addEventListener("touchstart",function(e){var t=e.touches[0];u(t)});var u=function(e){w.interactionStart(e,function(e,t){if(e instanceof Trade){var r=w.objects.indexOf(e);w.objects.push(w.objects.splice(r,1)[0])}w.selected=e,w.mousePos=t})};document.getElementById("trades").addEventListener("mousemove",function(e){b(e)}),document.getElementById("trades").addEventListener("touchmove",function(e){var t=e.touches[0];b(t)});var b=function(e){w.interactionMove(e,function(e,t){e instanceof Trade&&(e.drawable.pos=t,w.draw())})};document.getElementById("trades").addEventListener("mouseup",function(){p()}),document.getElementById("trades").addEventListener("touchend",function(){p()}),document.body.addEventListener("touchstart",function(e){e.preventDefault()});var p=function(){w.interactionStop(function(e){if(null!==e){var t,r;if(e instanceof Trade)for(t=0,r=w.objects.length;r>t;t++)w.objects[t].open&&w.objects[t]!==e&&w.objects[t].clicked();if("self"===e)for(t=0,r=w.objects.length;r>t;t++)w.objects[t].open&&w.objects[t].clicked();"function"==typeof e.clicked&&e.clicked()}})};document.getElementById("resetOffset").addEventListener("click",function(){w.moveToCenter()}),document.getElementById("scaleCanvas").addEventListener("mousemove",function(){w.scale=this.value,w.draw()})}(),function(){"use strict";var e=angular.module("app",["ngRoute"]);e.config(function(e){e.when("/home",{templateUrl:"pages/home.html",controller:"mainController"}).when("/profile/:id",{templateUrl:"pages/profile.html",controller:"profileController"}).when("/balanceHistory/:id",{templateUrl:"pages/balanceHistory.html",controller:"balanceController"}).when("/deposit/:id",{templateUrl:"pages/deposit.html",controller:"balanceController"}).when("/withdraw/:id",{templateUrl:"pages/withdraw.html",controller:"balanceController"}).otherwise({redirectTo:"/home"})})}(),function(){"use strict";var e=function(e,t,r){e.user={},e.user.userId="1",e.user.firstName="Marijn",e.user.lastName="Hosten",e.user.depositAmount=0,e.user.currentAmount=2e3,e.deposit=function(t){e.user.currentAmount+=t.depositAmount,r.location.hash="/home"},e.isEnabled=function(){return 0===e.user.depositAmount||"undefined"==typeof e.user.depositAmount?!0:!1}};angular.module("app").controller("balanceController",["$scope","$routeParams","$window",e])}(),function(){"use strict";var e=function(e){e.user={},e.user.userId="1",e.user.firstName="Marijn",e.user.lastName="Hosten",e.user.currentAmount=2e3;var t={id:9,firstName:"Anna",lastName:"Abcd",followers:27},r={id:2,firstName:"Bob",lastName:"Abcd",followers:28},a={id:3,firstName:"Christine",lastName:"Abcd",followers:105},o={id:4,firstName:"Dave",lastName:"Abcd",followers:30},i={id:5,firstName:"Eric",lastName:"Abcd",followers:2},s={id:6,firstName:"Francis",lastName:"Abcd",followers:0},n={id:7,firstName:"Gaben",lastName:"Abcd",followers:299},l={id:8,firstName:"Harold",lastName:"Abcd",followers:4};e.traders=[t,r,a,o,i,s,n,l]};angular.module("app").controller("mainController",["$scope",e])}(),function(){"use strict";var e=function(e,t,r,a){var o=t.id;e.user=a.getById(o),e.isEnabled=function(){return!1},e.submitForm=function(e){alert("changes saved"),r.location.hash="/home"}};angular.module("app").controller("profileController",["$scope","$routeParams","$window","userService",e])}();
//# sourceMappingURL=data:application/json;base64,
