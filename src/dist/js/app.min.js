function Trader(e,t,a,r,n){this.name=e,this.amount=t,this.inAt=a,this.comment=n,this.type=r,this.difference=0,this.drawable=new Drawable,this.drawable.color="#ffffff",this.drawable.borderColor="#B3B369",this.drawable.borderWidth=2,this.drawable.borderScaling=!1,this.drawable.textFont="SourceSansPro",this.drawable.textAnchor=new Vector2D(0,1),this.drawable.textBackground="#ffffff",this.drawable.textPadding=new Vector2D(0,0),this.drawable.textScaling=!1,this.drawable.textPos=new Vector2D(1,-1),this.drawable.textColor="#2C3E50",this.drawable.pos=new Vector2D(0,0),this.drawable.radius=25,this.drawable.show=!1,this["new"]=!0,this.open=!1,this.changeStockPrice=function(e){var r="[b]"+this.name+"[/b][align=right][color=",n=Math.floor((e-this.inAt)*this.amount*100)/100,i="#36B5DB",o="#E74C3C";0===this.type?this.difference=n:this.difference=-n,r+=this.difference>=0?i+"]":o+"]",r+=this.difference.toLocaleString("be-NL",{style:"currency",currency:"EUR"})+"[/color][/align]\n[i][color=",r+=0===this.type?i+"]":o+"]",r+=t,r+=0===this.type?" long at ":" short at ",r+=a.toLocaleString("be-NL",{style:"currency",currency:"EUR"})+"[/color][/i]\n",this.drawable.setText(r+this.comment)},this.draw=function(e,t){if(this.drawable.show){var a=this.drawable.pos.rotate(this.drawable.rotation);e.save(),e.globalAlpha*=this.drawable.opacity,e.translate(a.x,a.y),this.drawable.drawCircle(e),this.drawable.drawImageInCircle(e),this.drawable.drawBorderForCircle(e,t),e.restore()}},this.postDraw=function(e,t){if(this.drawable.show){var a=this.drawable.pos.rotate(this.drawable.rotation);e.save(),e.globalAlpha*=this.drawable.opacity,e.translate(a.x,a.y),this.drawable.drawText(e,t),e.restore()}},this.clicked=function(){var e=this;this.open?(this.drawable.animate("textSize",0,200,"easeInOut",null),this.drawable.animateVector("textPadding",new Vector2D(0,0),200,"easeInOut",function(t,a){t&&(e.open=!1)})):(this.drawable.animate("textSize",12,200,"easeInOut",null),this.drawable.animateVector("textPadding",new Vector2D(10,10),200,"easeInOut",function(t,a){t&&(e.open=!0)}))},this["delete"]=function(e,t){var a=0;"undefined"!=typeof t&&(a=t);for(var r=e.length;r>a;a++)if("undefined"!=typeof e[a].traders){var n=e[a].traders.indexOf(this);if(n>-1){e[a].traders.splice(n,1),e[a].calcTraders(),0===e[a].traders.length&&e[a].animateDelete(e,a);break}}},this.interaction=function(e,t){var a=e.subVector(this.drawable.pos.rotate(this.drawable.rotation).mul(t)),r=0;return 0!==this.drawable.radius&&(r=this.drawable.radius*t),0!==this.drawable.size.length()&&(r=this.drawable.size.length()*t),a.length()<=r&&this.drawable.show?(this["new"]&&(this["new"]=!1,this.drawable.borderColor="#eeeeee"),this):!1}}var Trade=function(e,a,r){this.stockPrice=e,this.traders=a,this.drawable=new Drawable,this.difference=0;for(var n=0,i=this.traders.length;i>n;n++)this.traders[n].changeStockPrice(this.stockPrice),this.difference+=this.traders[n].difference;if(this.difference=Math.floor(100*this.difference)/100,this.drawable.setText(this.difference.toLocaleString("be-NL",{style:"currency",currency:"EUR"})),this.difference>=0?(this.drawable.textBackground="#36B5DB",this.drawable.textReplaceColor="#36B5DB"):(this.drawable.textBackground="#E74C3C",this.drawable.textReplaceColor="#E74C3C"),this.lineColor="#B3B369",this.open=!1,this.drawable.textSize=10,this.drawable.radius=Math.floor(35*Math.random()+35),this.drawable.imgFill=!1,null===r){for(var o=Math.floor(Math.random()*window.innerWidth-window.innerWidth/2),s=Math.floor(Math.random()*(window.innerHeight-50)-(window.innerHeight-50)/2);new Vector2D(o,s).length()<100+this.drawable.radius||new Vector2D(o,s).length()>new Vector2D(window.innerWidth,window.innerHeight-50).div(2).length()-this.drawable.radius;)o=Math.floor(Math.random()*window.innerWidth-window.innerWidth/2),s=Math.floor(Math.random()*(window.innerHeight-50)-(window.innerHeight-50)/2);this.drawable.animateVector("pos",new Vector2D(o,s),1e3,"easeInOut",null)}else this.drawable.animateVector("pos",r,1e3,"easeInOut",null);this.drawable.color="#ffffff",this.drawable.borderWidth=2,this.drawable.borderColor="#B3B369",this.drawable.borderScaling=!1,this.drawable.textColor="#ffffff",this.drawable.textFont="SourceSansPro",this.drawable.textAnchor=new Vector2D(.5,.5),this.drawable.textPos=new Vector2D(0,.5),this.drawable.textPadding=new Vector2D(10,10),this.drawable.textReplace=15;var d=this;setInterval(function(){var e=Math.random()/10,t=Math.floor(2*Math.random());1===t&&(e=-e),d.stockPrice=Math.floor(100*(d.stockPrice+e))/100,d.difference=0;for(var a=0,r=d.traders.length;r>a;a++)d.traders[a].changeStockPrice(d.stockPrice),d.difference+=d.traders[a].difference;d.difference=Math.floor(100*d.difference)/100,d.open?(d.difference>=0?d.drawable.textReplaceColor="#36B5DB":d.drawable.textReplaceColor="#E74C3C",d.drawable.textBackground="#2C3E50",d.drawable.setText(d.stockPrice.toLocaleString("be-NL",{style:"currency",currency:"EUR"}))):(d.drawable.setText(d.difference.toLocaleString("be-NL",{style:"currency",currency:"EUR"})),d.difference>=0?(d.drawable.textBackground="#36B5DB",d.drawable.textReplaceColor="#36B5DB"):(d.drawable.textBackground="#E74C3C",d.drawable.textReplaceColor="#E74C3C")),d.drawable.requestRedraw=!0},2e3),this.interaction=function(e,a){var r=e.subVector(this.drawable.pos.mul(a)),n=0;if(0!==this.drawable.radius&&(n=this.drawable.radius*a),0!==this.drawable.size.length()&&(n=this.drawable.size.length()*a),r.length()<=n)return this;for(var i=e.subVector(this.drawable.pos.mul(a)),o=0,s=this.traders.length;s>o;o++){var d=this.traders[o].interaction(i,a);if(d!==!1){for(var l=0,c=this.traders.length;c>l;l++)t=this.traders[l],t.open&&t.clicked();return d}}return!1},this.calcTraders=function(){for(var e=180/(this.traders.length+1),t=0,a=this.traders.length;a>t;t++){var r=e*(t+1-(this.traders.length+1)/2)-90;this.traders[t].drawable.animate("rotation",r,300,"easeInOut",null)}},this.calcTraders(),this.preDraw=function(e,t){if(this.drawable.show){e.save(),e.globalAlpha*=this.drawable.opacity,e.strokeStyle=this.lineColor,e.lineWidth=.5;for(var a=!1,r=0,n=this.traders.length;n>r;r++)this.traders[r]["new"]&&(a=!0);a?this.lineColor="#B3B369":this.lineColor="#2C3E50",e.beginPath(),e.moveTo(0,0),e.lineTo(this.drawable.pos.x,this.drawable.pos.y),e.closePath(),e.stroke(),e.restore()}},this.draw=function(e,t){if(this.drawable.show){e.save(),e.translate(this.drawable.pos.x,this.drawable.pos.y),e.globalAlpha*=this.drawable.opacity;for(var a=!1,r=0,n=this.traders.length;n>r;r++)this.traders[r].draw(e,t),this.traders[r]["new"]&&(a=!0);a?this.drawable.borderColor="#B3B369":this.drawable.borderColor="#eeeeee",this.drawable.drawCircle(e),this.drawable.drawImageInCircle(e),this.drawable.drawBorderForCircle(e,t),this.drawable.drawText(e,t),e.restore()}},this["delete"]=function(e){for(var t=e.indexOf(this),a=0,r=this.traders.length;r>a;a++)this.traders[0]["delete"](e,t)},this.animateDelete=function(e,t){this.drawable.animate("textSize",0,300,"easeInOut",null),this.drawable.animate("textReplace",0,300,"easeInOut",null),this.drawable.animateVector("textPadding",new Vector2D(0,0),300,"easeInOut",null),this.drawable.animate("opacity",0,300,"easeInOut",null),this.drawable.animate("radius",0,300,"easeInOut",function(){e.splice(t,1)})},this.postDraw=function(e,t){if(this.drawable.show){e.save(),e.globalAlpha*=this.drawable.opacity,e.translate(this.drawable.pos.x,this.drawable.pos.y);for(var a=0,r=this.traders.length;r>a;a++)this.traders[a].postDraw(e,t);e.restore()}},this.clicked=function(){var e=0,t=0,a=null,r=this;if(this.open){var n=function(e,t){t.show=!1};for(t=this.traders.length;t>e;e++)a=this.traders[e],a.open&&a.clicked(),a.drawable.animateVector("pos",new Vector2D(0,0),300,"easeInOut",n);this.drawable.animateVector("textPadding",new Vector2D(0,0),150,"easeIn",function(e,t){t.animateVector("textPadding",new Vector2D(10,10),150,"easeOut",null)}),this.drawable.animate("textReplace",0,150,"easeIn",function(e,t){t.animate("textReplace",15,150,"easeOut",null)}),this.drawable.animate("textSize",0,150,"easeIn",function(e,t){t.setText(r.difference.toLocaleString("be-NL",{style:"currency",currency:"EUR"})),r.difference>=0?t.textBackground="#36B5DB":t.textBackground="#E74C3C",r.open=!1,t.animate("textSize",10,150,"easeOut",null)})}else{for(t=this.traders.length;t>e;e++)a=this.traders[e],a.drawable.show=!0,a.drawable.animateVector("pos",new Vector2D(0,this.drawable.radius+a.drawable.radius+15),300,"easeInOut",null);this.drawable.animateVector("textPadding",new Vector2D(0,0),150,"easeIn",function(e,t){t.animateVector("textPadding",new Vector2D(10,10),150,"easeOut",null)}),this.drawable.animate("textReplace",0,150,"easeIn",function(e,t){t.animate("textReplace",15,150,"easeOut",null)}),this.drawable.animate("textSize",0,150,"easeIn",function(e,t){t.textBackground="#2C3E50",t.setText(r.stockPrice.toLocaleString("be-NL",{style:"currency",currency:"EUR"})),r.open=!0,t.animate("textSize",10,150,"easeOut",null)})}},this.requestRedraw=function(){for(var e=0,t=this.traders.length;t>e;e++)this.traders[e].drawable.requestRedraw&&(this.drawable.requestRedraw=!0,this.traders[e].drawable.requestRedraw=!1);return this.drawable.requestRedraw?(this.drawable.requestRedraw=!1,!0):!1}},tradeCanvas=function(){if(null!==document.getElementById("trades")){var e=[],t=[],a=new Drawable,r=new Drawable,n=["logo0.svg","logo1.svg","logo2.svg","logo3.svg","logo4.svg"],i=[["Crazy Heffe","trader0.jpg"],["Marino Hostino","trader1.jpg"],["Nicolsh Lavanda","trader2.jpg"],["xXrobke69Xx","trader3.jpg"]];a.setImage("dist/images/profiles/profile.jpg"),a.radius=100,a.color="#ffffff",a.borderColor="#eeeeee",a.borderScaling=!1,a.borderWidth=2,a.textSize=12,a.textColor="#ffffff",a.textFont="SourceSansPro",a.textAnchor=new Vector2D(.5,.5),a.textPos=new Vector2D(0,.5),a.textPadding=new Vector2D(10,10),a.textReplace=15,r.setImage("dist/images/misc/trash.svg"),r.radius=50,r.color="#eeeeee",r.borderColor="#eeeeee",r.borderScaling=!1,r.borderWidth=2,r.pos=new Vector2D(window.innerWidth-100,window.innerHeight-150);for(var o=0;4>o;o++){var s=Math.floor(50*Math.random()),d=Math.floor(2e4*Math.random())/100,l=Math.floor(2*Math.random()),c=[s,d,l];t.push(c)}for(var h=0,w=0;5>w;w++){for(var f=Math.ceil(4*Math.random()),u=[],b=Math.floor(200*Math.random()*100)/100,g=0;f>g;g++){var p=new Trader(i[g][0],t[g][0],t[g][1],t[g][2],"This looks good!\nI can even put a second line\n\nAnd even more");p.drawable.setImage("dist/images/profiles/"+i[g][1],function(){v.draw()}),p.percentage=.4*Math.random()+.1,u.push(p)}var m=new Trade(b,u,null);h+=m.difference,m.drawable.setImage("dist/images/logos/"+n[w],function(){v.draw()}),e.push(m)}e.push(a),e.push(r),h>=0?(a.textBackground="#36B5DB",a.textReplaceColor="#36B5DB"):(a.textBackground="#E74C3C",a.textReplaceColor="#E74C3C"),a.setText((Math.floor(100*h)/100).toLocaleString("be-NL",{style:"currency",currency:"EUR"}));var v=new Canvas(0,50,window.innerWidth,window.innerHeight-50,"trades",e);v.drawCallback=function(){for(var e=0,t=0,r=v.objects.length;r>t;t++)"undefined"!=typeof v.objects[t].difference&&(e+=v.objects[t].difference);e>=0?(a.textBackground="#36B5DB",a.textReplaceColor="#36B5DB"):(a.textBackground="#E74C3C",a.textReplaceColor="#E74C3C"),a.setText((Math.floor(100*e)/100).toLocaleString("be-NL",{style:"currency",currency:"EUR"}))},a.draw=function(e,t){this.drawCircle(e),this.drawImageInCircle(e),this.drawBorderForCircle(e,t),this.drawText(e,t)},r.interaction=function(e){var t=e.subVector(v.margin).subVector(this.pos),a=this.radius*v.scale;return t.length()<=a&&this.show},r.draw=function(e,t){var a=this.pos.subVector(v.offset).subVector(v.center).mul(1/v.scale);e.save(),e.translate(a.x,a.y),this.drawCircle(e),this.drawImageInCircle(e),this.drawBorderForCircle(e,t),e.restore()},v.draw(),document.getElementById("trades").addEventListener("mousedown",function(e){x(e)}),document.getElementById("trades").addEventListener("touchstart",function(e){var t=e.touches[0];x(t)});var x=function(e){v.interactionStart(e,function(e,t){var a;e instanceof Trade&&(a=v.objects.indexOf(e),v.objects.push(v.objects.splice(a,1)[0])),e instanceof Trader&&(e.drawable.returnPos=e.drawable.pos),"self"===e&&(a=v.objects.indexOf(r),v.objects.splice(a,1),v.objects.push(r),v.draw()),v.selected=e,v.mousePos=t})};document.getElementById("trades").addEventListener("mousemove",function(e){C(e)}),document.getElementById("trades").addEventListener("touchmove",function(e){var t=e.touches[0];C(t)});var C=function(e){v.interactionMove(e,function(t,a,n){t instanceof Trade&&(t.drawable.opacity=.5,t.drawable.pos=a),t instanceof Trader&&(t.drawable.opacity=.5,t.drawable.pos=t.drawable.pos.addVector(n.rotate(-t.drawable.rotation).mul(1/v.scale))),r.interaction(new Vector2D(e.pageX,e.pageY))?r.color="#E74C3C":r.color="#eeeeee",v.draw()})};document.getElementById("trades").addEventListener("mouseup",function(e){y(e)}),document.getElementById("trades").addEventListener("touchend",function(e){var t=e.touches[0];y(t)}),document.body.addEventListener("touchstart",function(e){e.preventDefault()});var y=function(e){v.interactionStop(function(t,a){var n,i;if(t){if(a instanceof Trade)for(a.drawable.opacity=1,n=0,i=v.objects.length;i>n;n++)v.objects[n].open&&v.objects[n]!==a&&v.objects[n].clicked();if(a instanceof Trader&&(a.drawable.opacity=1),"self"===a)for(n=0,i=v.objects.length;i>n;n++)v.objects[n].open&&v.objects[n].clicked();"function"==typeof a.clicked&&a.clicked()}else a instanceof Trade&&(a.drawable.opacity=1,r.interaction(new Vector2D(e.pageX,e.pageY))&&a["delete"](v.objects)),a instanceof Trader&&(a.drawable.opacity=1,a.drawable.returnPos.length()!==a.drawable.pos.length()&&a.drawable.returnPos.x!==a.drawable.pos.x&&a.drawable.animateVector("pos",a.drawable.returnPos,500,"easeInOut",null),r.interaction(new Vector2D(e.pageX,e.pageY))&&a["delete"](v.objects));r.color="#eeeeee"}),v.draw()};document.getElementById("trades").addEventListener("wheel",function(e){B(e)}),document.getElementById("trades").addEventListener("DOMMouseScroll",function(e){B(e)});var B=function(e){e.preventDefault();var t=0;t="undefined"!=typeof e.wheelDelta?e.wheelDelta/300:-e.detail/50;var a=v.scale+t;a>1.8&&(a=1.8),.4>a&&(a=.4),a=Math.floor(100*a)/100,v.scale=a,r.radius=50/v.scale,document.getElementById("scaleCanvas").value=v.scale,v.draw()};document.getElementById("scaleCanvas").addEventListener("mousemove",function(){v.scale=parseFloat(this.value),r.radius=50/v.scale,v.draw()}),document.getElementById("resetOffset").addEventListener("click",function(){v.moveToCenter()})}};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYWRlci5qcyIsInRyYWRlLmpzIiwidHJhZGVDYW52YXMuanMiXSwibmFtZXMiOlsiVHJhZGVyIiwibmFtZSIsImFtb3VudCIsImluQXQiLCJ0eXBlIiwiY29tbWVudCIsInRoaXMiLCJkaWZmZXJlbmNlIiwiZHJhd2FibGUiLCJEcmF3YWJsZSIsImNvbG9yIiwiYm9yZGVyQ29sb3IiLCJib3JkZXJXaWR0aCIsImJvcmRlclNjYWxpbmciLCJ0ZXh0Rm9udCIsInRleHRBbmNob3IiLCJWZWN0b3IyRCIsInRleHRCYWNrZ3JvdW5kIiwidGV4dFBhZGRpbmciLCJ0ZXh0U2NhbGluZyIsInRleHRQb3MiLCJ0ZXh0Q29sb3IiLCJwb3MiLCJyYWRpdXMiLCJzaG93Iiwib3BlbiIsImNoYW5nZVN0b2NrUHJpY2UiLCJzdG9ja1ByaWNlIiwicHJlc2V0IiwiZGlmZiIsIk1hdGgiLCJmbG9vciIsIm5lZyIsInRvTG9jYWxlU3RyaW5nIiwic3R5bGUiLCJjdXJyZW5jeSIsInNldFRleHQiLCJkcmF3IiwiY3R4Iiwic2NhbGUiLCJwIiwicm90YXRlIiwicm90YXRpb24iLCJzYXZlIiwiZ2xvYmFsQWxwaGEiLCJvcGFjaXR5IiwidHJhbnNsYXRlIiwieCIsInkiLCJkcmF3Q2lyY2xlIiwiZHJhd0ltYWdlSW5DaXJjbGUiLCJkcmF3Qm9yZGVyRm9yQ2lyY2xlIiwicmVzdG9yZSIsInBvc3REcmF3IiwiZHJhd1RleHQiLCJjbGlja2VkIiwibWUiLCJhbmltYXRlIiwiYW5pbWF0ZVZlY3RvciIsImZpbmlzaGVkIiwiZWxlbWVudCIsInRyYWRlcyIsImluZGV4IiwiaSIsImwiLCJsZW5ndGgiLCJ0cmFkZXJzIiwiaW5kIiwiaW5kZXhPZiIsInNwbGljZSIsImNhbGNUcmFkZXJzIiwiYW5pbWF0ZURlbGV0ZSIsImludGVyYWN0aW9uIiwibW91c2VQb3MiLCJtb3VzZURpZmZlcmVuY2UiLCJzdWJWZWN0b3IiLCJtdWwiLCJzaXplIiwiVHJhZGUiLCJ0ZXh0UmVwbGFjZUNvbG9yIiwibGluZUNvbG9yIiwidGV4dFNpemUiLCJyYW5kb20iLCJpbWdGaWxsIiwid2luZG93IiwiaW5uZXJXaWR0aCIsImlubmVySGVpZ2h0IiwiZGl2IiwidGV4dFJlcGxhY2UiLCJzZXRJbnRlcnZhbCIsImQiLCJwT20iLCJyZXF1ZXN0UmVkcmF3IiwicmVsUG9zIiwibyIsImoiLCJtIiwidCIsImFuZ2xlIiwiYWxwaGEiLCJwcmVEcmF3Iiwic3Ryb2tlU3R5bGUiLCJsaW5lV2lkdGgiLCJuZXdUcmFkZXIiLCJiZWdpblBhdGgiLCJtb3ZlVG8iLCJsaW5lVG8iLCJjbG9zZVBhdGgiLCJzdHJva2UiLCJmIiwiZG9uZSIsInRyYWRlQ2FudmFzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInByb2ZpbGUiLCJ0cmFzaCIsImxvZ29zIiwicGVvcGxlIiwic2V0SW1hZ2UiLCJ0cmFkZXIiLCJwdXNoIiwiciIsImNlaWwiLCJwcGwiLCJrIiwiY2FudmFzIiwicGVyY2VudGFnZSIsInRyYWRlIiwiQ2FudmFzIiwiZHJhd0NhbGxiYWNrIiwib2JqZWN0cyIsIm1hcmdpbiIsIm9mZnNldCIsImNlbnRlciIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiaW50ZXJhY3Rpb25TdGFydCIsInRvdWNoIiwidG91Y2hlcyIsIm9iamVjdCIsInJldHVyblBvcyIsInNlbGVjdGVkIiwiaW50ZXJhY3Rpb25Nb3ZlIiwiYWRkVmVjdG9yIiwicGFnZVgiLCJwYWdlWSIsImludGVyYWN0aW9uU3RvcCIsImJvZHkiLCJwcmV2ZW50RGVmYXVsdCIsImNsaWNrIiwic2Nyb2xsSW50ZXJhY3Rpb24iLCJkZWx0YSIsIndoZWVsRGVsdGEiLCJkZXRhaWwiLCJ2YWx1ZSIsInBhcnNlRmxvYXQiLCJtb3ZlVG9DZW50ZXIiXSwibWFwcGluZ3MiOiJBQUFBLFFBQUFBLFFBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEdBQ0FDLEtBQUFMLEtBQUFBLEVBQ0FLLEtBQUFKLE9BQUFBLEVBQ0FJLEtBQUFILEtBQUFBLEVBQ0FHLEtBQUFE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c291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gVHJhZGVyKG5hbWUsIGFtb3VudCwgaW5BdCwgdHlwZSwgY29tbWVudCkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5hbW91bnQgPSBhbW91bnQ7XG4gICAgdGhpcy5pbkF0ID0gaW5BdDtcbiAgICB0aGlzLmNvbW1lbnQgPSBjb21tZW50O1xuICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgdGhpcy5kaWZmZXJlbmNlID0gMDtcbiAgICB0aGlzLmRyYXdhYmxlID0gbmV3IERyYXdhYmxlKCk7XG5cbiAgICB0aGlzLmRyYXdhYmxlLmNvbG9yID0gXCIjZmZmZmZmXCI7XG5cbiAgICB0aGlzLmRyYXdhYmxlLmJvcmRlckNvbG9yID0gXCIjQjNCMzY5XCI7XG4gICAgdGhpcy5kcmF3YWJsZS5ib3JkZXJXaWR0aCA9IDI7XG4gICAgdGhpcy5kcmF3YWJsZS5ib3JkZXJTY2FsaW5nID0gZmFsc2U7XG4gICAgdGhpcy5kcmF3YWJsZS50ZXh0Rm9udCA9IFwiU291cmNlU2Fuc1Byb1wiO1xuICAgIHRoaXMuZHJhd2FibGUudGV4dEFuY2hvciA9IG5ldyBWZWN0b3IyRCgwLCAxKTtcbiAgICB0aGlzLmRyYXdhYmxlLnRleHRCYWNrZ3JvdW5kID0gXCIjZmZmZmZmXCI7XG4gICAgdGhpcy5kcmF3YWJsZS50ZXh0UGFkZGluZyA9IG5ldyBWZWN0b3IyRCgwLCAwKTtcbiAgICB0aGlzLmRyYXdhYmxlLnRleHRTY2FsaW5nID0gZmFsc2U7XG4gICAgdGhpcy5kcmF3YWJsZS50ZXh0UG9zID0gbmV3IFZlY3RvcjJEKDEsIC0xKTtcbiAgICB0aGlzLmRyYXdhYmxlLnRleHRDb2xvciA9IFwiIzJDM0U1MFwiO1xuXG4gICAgdGhpcy5kcmF3YWJsZS5wb3MgPSBuZXcgVmVjdG9yMkQoMCwgMCk7XG5cbiAgICB0aGlzLmRyYXdhYmxlLnJhZGl1cyA9IDI1O1xuXG4gICAgdGhpcy5kcmF3YWJsZS5zaG93ID0gZmFsc2U7XG5cbiAgICB0aGlzLm5ldyA9IHRydWU7XG4gICAgdGhpcy5vcGVuID0gZmFsc2U7XG5cbiAgICB0aGlzLmNoYW5nZVN0b2NrUHJpY2UgPSBmdW5jdGlvbihzdG9ja1ByaWNlKSB7XG4gICAgICAgIHZhciBwcmVzZXQgPSBcIltiXVwiICsgdGhpcy5uYW1lICsgXCJbL2JdW2FsaWduPXJpZ2h0XVtjb2xvcj1cIjtcbiAgICAgICAgdmFyIGRpZmYgPSBNYXRoLmZsb29yKChzdG9ja1ByaWNlIC0gdGhpcy5pbkF0KSAqIHRoaXMuYW1vdW50ICogMTAwKSAvIDEwMDtcbiAgICAgICAgdmFyIHBvcyA9IFwiIzM2QjVEQlwiO1xuICAgICAgICB2YXIgbmVnID0gXCIjRTc0QzNDXCI7XG4gICAgICAgIGlmKHRoaXMudHlwZSA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5kaWZmZXJlbmNlID0gZGlmZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZGlmZmVyZW5jZSA9IC1kaWZmO1xuICAgICAgICB9XG4gICAgICAgIGlmKHRoaXMuZGlmZmVyZW5jZSA+PSAwKSB7XG4gICAgICAgICAgICBwcmVzZXQgKz0gcG9zICsgXCJdXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwcmVzZXQgKz0gbmVnICsgXCJdXCI7XG4gICAgICAgIH1cbiAgICAgICAgcHJlc2V0ICs9IHRoaXMuZGlmZmVyZW5jZS50b0xvY2FsZVN0cmluZygnYmUtTkwnLCB7c3R5bGU6ICdjdXJyZW5jeScsIGN1cnJlbmN5OiAnRVVSJ30pICsgXCJbL2NvbG9yXVsvYWxpZ25dXFxuW2ldW2NvbG9yPVwiO1xuICAgICAgICBpZih0aGlzLnR5cGUgPT09IDApIHtcbiAgICAgICAgICAgIHByZXNldCArPSBwb3MgKyBcIl1cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByZXNldCArPSBuZWcgKyBcIl1cIjtcbiAgICAgICAgfVxuICAgICAgICBwcmVzZXQgKz0gYW1vdW50O1xuICAgICAgICBpZih0aGlzLnR5cGUgPT09IDApIHtcbiAgICAgICAgICAgIHByZXNldCArPSBcIiBsb25nIGF0IFwiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcHJlc2V0ICs9IFwiIHNob3J0IGF0IFwiO1xuICAgICAgICB9XG4gICAgICAgIHByZXNldCArPSBpbkF0LnRvTG9jYWxlU3RyaW5nKCdiZS1OTCcsIHtzdHlsZTogJ2N1cnJlbmN5JywgY3VycmVuY3k6ICdFVVInfSkgKyBcIlsvY29sb3JdWy9pXVxcblwiO1xuICAgICAgICB0aGlzLmRyYXdhYmxlLnNldFRleHQocHJlc2V0ICsgdGhpcy5jb21tZW50KTtcbiAgICB9O1xuXG4gICAgdGhpcy5kcmF3ID0gZnVuY3Rpb24oY3R4LCBzY2FsZSkge1xuICAgICAgICBpZih0aGlzLmRyYXdhYmxlLnNob3cpIHtcbiAgICAgICAgICAgIHZhciBwID0gdGhpcy5kcmF3YWJsZS5wb3Mucm90YXRlKHRoaXMuZHJhd2FibGUucm90YXRpb24pO1xuICAgICAgICAgICAgY3R4LnNhdmUoKTtcbiAgICAgICAgICAgIGN0eC5nbG9iYWxBbHBoYSAqPSB0aGlzLmRyYXdhYmxlLm9wYWNpdHk7XG4gICAgICAgICAgICBjdHgudHJhbnNsYXRlKHAueCwgcC55KTtcbiAgICAgICAgICAgIHRoaXMuZHJhd2FibGUuZHJhd0NpcmNsZShjdHgpO1xuICAgICAgICAgICAgdGhpcy5kcmF3YWJsZS5kcmF3SW1hZ2VJbkNpcmNsZShjdHgpO1xuICAgICAgICAgICAgdGhpcy5kcmF3YWJsZS5kcmF3Qm9yZGVyRm9yQ2lyY2xlKGN0eCwgc2NhbGUpO1xuICAgICAgICAgICAgY3R4LnJlc3RvcmUoKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLnBvc3REcmF3ID0gZnVuY3Rpb24oY3R4LCBzY2FsZSkge1xuICAgICAgICBpZih0aGlzLmRyYXdhYmxlLnNob3cpIHtcbiAgICAgICAgICAgIHZhciBwID0gdGhpcy5kcmF3YWJsZS5wb3Mucm90YXRlKHRoaXMuZHJhd2FibGUucm90YXRpb24pO1xuICAgICAgICAgICAgY3R4LnNhdmUoKTtcbiAgICAgICAgICAgIGN0eC5nbG9iYWxBbHBoYSAqPSB0aGlzLmRyYXdhYmxlLm9wYWNpdHk7XG4gICAgICAgICAgICBjdHgudHJhbnNsYXRlKHAueCwgcC55KTtcbiAgICAgICAgICAgIHRoaXMuZHJhd2FibGUuZHJhd1RleHQoY3R4LCBzY2FsZSk7XG4gICAgICAgICAgICBjdHgucmVzdG9yZSgpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHRoaXMuY2xpY2tlZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICBpZighdGhpcy5vcGVuKSB7XG4gICAgICAgICAgICB0aGlzLmRyYXdhYmxlLmFuaW1hdGUoXCJ0ZXh0U2l6ZVwiLCAxMiwgMjAwLCBcImVhc2VJbk91dFwiLCBudWxsKTtcbiAgICAgICAgICAgIHRoaXMuZHJhd2FibGUuYW5pbWF0ZVZlY3RvcihcInRleHRQYWRkaW5nXCIsIG5ldyBWZWN0b3IyRCgxMCwgMTApLCAyMDAsIFwiZWFzZUluT3V0XCIsIGZ1bmN0aW9uKGZpbmlzaGVkLCBlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgaWYoZmluaXNoZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgbWUub3BlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmRyYXdhYmxlLmFuaW1hdGUoXCJ0ZXh0U2l6ZVwiLCAwLCAyMDAsIFwiZWFzZUluT3V0XCIsIG51bGwpO1xuICAgICAgICAgICAgdGhpcy5kcmF3YWJsZS5hbmltYXRlVmVjdG9yKFwidGV4dFBhZGRpbmdcIiwgbmV3IFZlY3RvcjJEKDAsIDApLCAyMDAsIFwiZWFzZUluT3V0XCIsIGZ1bmN0aW9uKGZpbmlzaGVkLCBlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgaWYoZmluaXNoZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgbWUub3BlbiA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHRoaXMuZGVsZXRlID0gZnVuY3Rpb24odHJhZGVzLCBpbmRleCkge1xuICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgIGlmKHR5cGVvZiBpbmRleCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIGkgPSBpbmRleDtcbiAgICAgICAgfVxuICAgICAgICBmb3IodmFyIGwgPSB0cmFkZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICBpZih0eXBlb2YgdHJhZGVzW2ldLnRyYWRlcnMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgdmFyIGluZCA9IHRyYWRlc1tpXS50cmFkZXJzLmluZGV4T2YodGhpcyk7XG4gICAgICAgICAgICAgICAgaWYgKGluZCA+IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyYWRlc1tpXS50cmFkZXJzLnNwbGljZShpbmQsIDEpO1xuICAgICAgICAgICAgICAgICAgICB0cmFkZXNbaV0uY2FsY1RyYWRlcnMoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYodHJhZGVzW2ldLnRyYWRlcnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFkZXNbaV0uYW5pbWF0ZURlbGV0ZSh0cmFkZXMsIGkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIHRoaXMuaW50ZXJhY3Rpb24gPSBmdW5jdGlvbihtb3VzZVBvcywgc2NhbGUpIHtcbiAgICAgICAgdmFyIG1vdXNlRGlmZmVyZW5jZSA9IG1vdXNlUG9zLnN1YlZlY3Rvcih0aGlzLmRyYXdhYmxlLnBvcy5yb3RhdGUodGhpcy5kcmF3YWJsZS5yb3RhdGlvbikubXVsKHNjYWxlKSk7XG4gICAgICAgIHZhciBkaWZmZXJlbmNlID0gMDtcbiAgICAgICAgaWYgKHRoaXMuZHJhd2FibGUucmFkaXVzICE9PSAwKSB7XG4gICAgICAgICAgICBkaWZmZXJlbmNlID0gdGhpcy5kcmF3YWJsZS5yYWRpdXMgKiBzY2FsZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5kcmF3YWJsZS5zaXplLmxlbmd0aCgpICE9PSAwKSB7XG4gICAgICAgICAgICBkaWZmZXJlbmNlID0gdGhpcy5kcmF3YWJsZS5zaXplLmxlbmd0aCgpICogc2NhbGU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1vdXNlRGlmZmVyZW5jZS5sZW5ndGgoKSA8PSBkaWZmZXJlbmNlICYmIHRoaXMuZHJhd2FibGUuc2hvdykge1xuICAgICAgICAgICAgaWYodGhpcy5uZXcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm5ldyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuZHJhd2FibGUuYm9yZGVyQ29sb3IgPSBcIiNlZWVlZWVcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfTtcbn0iLCJ2YXIgVHJhZGUgPSBmdW5jdGlvbihzdG9ja1ByaWNlLCB0cmFkZXJzLCBwb3MpIHtcbiAgICB0aGlzLnN0b2NrUHJpY2UgPSBzdG9ja1ByaWNlO1xuICAgIHRoaXMudHJhZGVycyA9IHRyYWRlcnM7XG4gICAgdGhpcy5kcmF3YWJsZSA9IG5ldyBEcmF3YWJsZSgpO1xuXG4gICAgdGhpcy5kaWZmZXJlbmNlID0gMDtcbiAgICBmb3IodmFyIGkgPSAwLCBsID0gdGhpcy50cmFkZXJzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICB0aGlzLnRyYWRlcnNbaV0uY2hhbmdlU3RvY2tQcmljZSh0aGlzLnN0b2NrUHJpY2UpO1xuICAgICAgICB0aGlzLmRpZmZlcmVuY2UgKz0gdGhpcy50cmFkZXJzW2ldLmRpZmZlcmVuY2U7XG4gICAgfVxuICAgIHRoaXMuZGlmZmVyZW5jZSA9IE1hdGguZmxvb3IodGhpcy5kaWZmZXJlbmNlICogMTAwKSAvIDEwMDtcbiAgICB0aGlzLmRyYXdhYmxlLnNldFRleHQodGhpcy5kaWZmZXJlbmNlLnRvTG9jYWxlU3RyaW5nKCdiZS1OTCcsIHsgc3R5bGU6ICdjdXJyZW5jeScsIGN1cnJlbmN5OiAnRVVSJ30pKTtcbiAgICBpZih0aGlzLmRpZmZlcmVuY2UgPj0gMCkge1xuICAgICAgICB0aGlzLmRyYXdhYmxlLnRleHRCYWNrZ3JvdW5kID0gXCIjMzZCNURCXCI7XG4gICAgICAgIHRoaXMuZHJhd2FibGUudGV4dFJlcGxhY2VDb2xvciA9IFwiIzM2QjVEQlwiO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZHJhd2FibGUudGV4dEJhY2tncm91bmQgPSBcIiNFNzRDM0NcIjtcbiAgICAgICAgdGhpcy5kcmF3YWJsZS50ZXh0UmVwbGFjZUNvbG9yID0gXCIjRTc0QzNDXCI7XG4gICAgfVxuICAgIHRoaXMubGluZUNvbG9yID0gXCIjQjNCMzY5XCI7XG4gICAgdGhpcy5vcGVuID0gZmFsc2U7XG5cbiAgICB0aGlzLmRyYXdhYmxlLnRleHRTaXplID0gMTA7XG4gICAgdGhpcy5kcmF3YWJsZS5yYWRpdXMgPSBNYXRoLmZsb29yKChNYXRoLnJhbmRvbSgpICogMzUpICsgMzUpO1xuICAgIHRoaXMuZHJhd2FibGUuaW1nRmlsbCA9IGZhbHNlO1xuICAgIGlmKHBvcyA9PT0gbnVsbCkge1xuICAgICAgICB2YXIgeCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHdpbmRvdy5pbm5lcldpZHRoIC0gKHdpbmRvdy5pbm5lcldpZHRoIC8gMikpO1xuICAgICAgICB2YXIgeSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqICh3aW5kb3cuaW5uZXJIZWlnaHQgLSA1MCkgLSAoKHdpbmRvdy5pbm5lckhlaWdodCAtIDUwKSAvIDIpKTtcbiAgICAgICAgd2hpbGUobmV3IFZlY3RvcjJEKHgsIHkpLmxlbmd0aCgpIDwgKDEwMCArIHRoaXMuZHJhd2FibGUucmFkaXVzKSB8fCBuZXcgVmVjdG9yMkQoeCwgeSkubGVuZ3RoKCkgPiAobmV3IFZlY3RvcjJEKHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQgLSA1MCkuZGl2KDIpLmxlbmd0aCgpIC0gdGhpcy5kcmF3YWJsZS5yYWRpdXMpKSB7XG4gICAgICAgICAgICB4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogd2luZG93LmlubmVyV2lkdGggLSAod2luZG93LmlubmVyV2lkdGggLyAyKSk7XG4gICAgICAgICAgICB5ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKHdpbmRvdy5pbm5lckhlaWdodCAtIDUwKSAtICgod2luZG93LmlubmVySGVpZ2h0IC0gNTApIC8gMikpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZHJhd2FibGUuYW5pbWF0ZVZlY3RvcihcInBvc1wiLCBuZXcgVmVjdG9yMkQoeCwgeSksIDEwMDAsIFwiZWFzZUluT3V0XCIsIG51bGwpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhpcy5kcmF3YWJsZS5hbmltYXRlVmVjdG9yKFwicG9zXCIsIHBvcywgMTAwMCwgXCJlYXNlSW5PdXRcIiwgbnVsbCk7XG4gICAgfVxuICAgIHRoaXMuZHJhd2FibGUuY29sb3IgPSBcIiNmZmZmZmZcIjtcbiAgICB0aGlzLmRyYXdhYmxlLmJvcmRlcldpZHRoID0gMjtcbiAgICB0aGlzLmRyYXdhYmxlLmJvcmRlckNvbG9yID0gXCIjQjNCMzY5XCI7XG4gICAgdGhpcy5kcmF3YWJsZS5ib3JkZXJTY2FsaW5nID0gZmFsc2U7XG4gICAgdGhpcy5kcmF3YWJsZS50ZXh0Q29sb3IgPSBcIiNmZmZmZmZcIjtcbiAgICB0aGlzLmRyYXdhYmxlLnRleHRGb250ID0gXCJTb3VyY2VTYW5zUHJvXCI7XG4gICAgdGhpcy5kcmF3YWJsZS50ZXh0QW5jaG9yID0gbmV3IFZlY3RvcjJEKDAuNSwgMC41KTtcbiAgICB0aGlzLmRyYXdhYmxlLnRleHRQb3MgPSBuZXcgVmVjdG9yMkQoMCwgMC41KTtcbiAgICB0aGlzLmRyYXdhYmxlLnRleHRQYWRkaW5nID0gbmV3IFZlY3RvcjJEKDEwLCAxMCk7XG4gICAgdGhpcy5kcmF3YWJsZS50ZXh0UmVwbGFjZSA9IDE1O1xuXG4gICAgdmFyIG1lID0gdGhpcztcbiAgICBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGQgPSBNYXRoLnJhbmRvbSgpIC8gMTA7XG4gICAgICAgIHZhciBwT20gPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyKTtcbiAgICAgICAgaWYocE9tID09PSAxKSB7XG4gICAgICAgICAgICBkID0gLWQ7XG4gICAgICAgIH1cbiAgICAgICAgbWUuc3RvY2tQcmljZSA9IE1hdGguZmxvb3IoKG1lLnN0b2NrUHJpY2UgKyBkKSAqIDEwMCkgLyAxMDA7XG4gICAgICAgIG1lLmRpZmZlcmVuY2UgPSAwO1xuICAgICAgICBmb3IodmFyIGkgPSAwLCBsID0gbWUudHJhZGVycy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgIG1lLnRyYWRlcnNbaV0uY2hhbmdlU3RvY2tQcmljZShtZS5zdG9ja1ByaWNlKTtcbiAgICAgICAgICAgIG1lLmRpZmZlcmVuY2UgKz0gbWUudHJhZGVyc1tpXS5kaWZmZXJlbmNlO1xuICAgICAgICB9XG4gICAgICAgIG1lLmRpZmZlcmVuY2UgPSBNYXRoLmZsb29yKG1lLmRpZmZlcmVuY2UgKiAxMDApIC8gMTAwO1xuICAgICAgICBpZighbWUub3Blbikge1xuICAgICAgICAgICAgbWUuZHJhd2FibGUuc2V0VGV4dChtZS5kaWZmZXJlbmNlLnRvTG9jYWxlU3RyaW5nKCdiZS1OTCcsIHsgc3R5bGU6ICdjdXJyZW5jeScsIGN1cnJlbmN5OiAnRVVSJ30pKTtcbiAgICAgICAgICAgIGlmKG1lLmRpZmZlcmVuY2UgPj0gMCkge1xuICAgICAgICAgICAgICAgIG1lLmRyYXdhYmxlLnRleHRCYWNrZ3JvdW5kID0gXCIjMzZCNURCXCI7XG4gICAgICAgICAgICAgICAgbWUuZHJhd2FibGUudGV4dFJlcGxhY2VDb2xvciA9IFwiIzM2QjVEQlwiO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBtZS5kcmF3YWJsZS50ZXh0QmFja2dyb3VuZCA9IFwiI0U3NEMzQ1wiO1xuICAgICAgICAgICAgICAgIG1lLmRyYXdhYmxlLnRleHRSZXBsYWNlQ29sb3IgPSBcIiNFNzRDM0NcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmKG1lLmRpZmZlcmVuY2UgPj0gMCkge1xuICAgICAgICAgICAgICAgIG1lLmRyYXdhYmxlLnRleHRSZXBsYWNlQ29sb3IgPSBcIiMzNkI1REJcIjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbWUuZHJhd2FibGUudGV4dFJlcGxhY2VDb2xvciA9IFwiI0U3NEMzQ1wiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbWUuZHJhd2FibGUudGV4dEJhY2tncm91bmQgPSBcIiMyQzNFNTBcIjtcbiAgICAgICAgICAgIG1lLmRyYXdhYmxlLnNldFRleHQobWUuc3RvY2tQcmljZS50b0xvY2FsZVN0cmluZygnYmUtTkwnLCB7IHN0eWxlOiAnY3VycmVuY3knLCBjdXJyZW5jeTogJ0VVUid9KSk7XG4gICAgICAgIH1cbiAgICAgICAgbWUuZHJhd2FibGUucmVxdWVzdFJlZHJhdyA9IHRydWU7XG4gICAgfSwgMjAwMCk7XG5cbiAgICB0aGlzLmludGVyYWN0aW9uID0gZnVuY3Rpb24obW91c2VQb3MsIHNjYWxlKSB7XG4gICAgICAgIHZhciBtb3VzZURpZmZlcmVuY2UgPSBtb3VzZVBvcy5zdWJWZWN0b3IodGhpcy5kcmF3YWJsZS5wb3MubXVsKHNjYWxlKSk7XG4gICAgICAgIHZhciBkaWZmZXJlbmNlID0gMDtcbiAgICAgICAgaWYodGhpcy5kcmF3YWJsZS5yYWRpdXMgIT09IDApIHtcbiAgICAgICAgICAgIGRpZmZlcmVuY2UgPSB0aGlzLmRyYXdhYmxlLnJhZGl1cyAqIHNjYWxlO1xuICAgICAgICB9XG4gICAgICAgIGlmKHRoaXMuZHJhd2FibGUuc2l6ZS5sZW5ndGgoKSAhPT0gMCkge1xuICAgICAgICAgICAgZGlmZmVyZW5jZSA9IHRoaXMuZHJhd2FibGUuc2l6ZS5sZW5ndGgoKSAqIHNjYWxlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtb3VzZURpZmZlcmVuY2UubGVuZ3RoKCkgPD0gZGlmZmVyZW5jZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJlbFBvcyA9IG1vdXNlUG9zLnN1YlZlY3Rvcih0aGlzLmRyYXdhYmxlLnBvcy5tdWwoc2NhbGUpKTtcbiAgICAgICAgZm9yKHZhciBpID0gMCwgbCA9IHRoaXMudHJhZGVycy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBvID0gdGhpcy50cmFkZXJzW2ldLmludGVyYWN0aW9uKHJlbFBvcywgc2NhbGUpO1xuICAgICAgICAgICAgaWYobyAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBmb3IodmFyIGogPSAwLCBtID0gdGhpcy50cmFkZXJzLmxlbmd0aDsgaiA8IG07IGorKykge1xuICAgICAgICAgICAgICAgICAgICB0ID0gdGhpcy50cmFkZXJzW2pdO1xuICAgICAgICAgICAgICAgICAgICBpZiAodC5vcGVuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0LmNsaWNrZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcblxuICAgIHRoaXMuY2FsY1RyYWRlcnMgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGFuZ2xlID0gMTgwIC8gKHRoaXMudHJhZGVycy5sZW5ndGggKyAxKTtcbiAgICAgICAgZm9yKHZhciBpID0gMCwgbCA9IHRoaXMudHJhZGVycy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBhbHBoYSA9IChhbmdsZSAqIChpICsgMSAtICgodGhpcy50cmFkZXJzLmxlbmd0aCArIDEpIC8gMikpKSAtIDkwO1xuICAgICAgICAgICAgdGhpcy50cmFkZXJzW2ldLmRyYXdhYmxlLmFuaW1hdGUoXCJyb3RhdGlvblwiLCBhbHBoYSwgMzAwLCBcImVhc2VJbk91dFwiLCBudWxsKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdGhpcy5jYWxjVHJhZGVycygpO1xuXG4gICAgdGhpcy5wcmVEcmF3ID0gZnVuY3Rpb24oY3R4LCBzY2FsZSkge1xuICAgICAgICBpZih0aGlzLmRyYXdhYmxlLnNob3cpIHtcbiAgICAgICAgICAgIGN0eC5zYXZlKCk7XG4gICAgICAgICAgICBjdHguZ2xvYmFsQWxwaGEgKj0gdGhpcy5kcmF3YWJsZS5vcGFjaXR5O1xuICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gdGhpcy5saW5lQ29sb3I7XG4gICAgICAgICAgICBjdHgubGluZVdpZHRoID0gMC41O1xuICAgICAgICAgICAgdmFyIG5ld1RyYWRlciA9IGZhbHNlO1xuICAgICAgICAgICAgZm9yKHZhciBpID0gMCwgbCA9IHRoaXMudHJhZGVycy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZih0aGlzLnRyYWRlcnNbaV0ubmV3KSB7XG4gICAgICAgICAgICAgICAgICAgIG5ld1RyYWRlciA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYobmV3VHJhZGVyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5saW5lQ29sb3IgPSBcIiNCM0IzNjlcIjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5saW5lQ29sb3IgPSBcIiMyQzNFNTBcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgIGN0eC5tb3ZlVG8oMCwgMCk7XG4gICAgICAgICAgICBjdHgubGluZVRvKHRoaXMuZHJhd2FibGUucG9zLngsIHRoaXMuZHJhd2FibGUucG9zLnkpO1xuICAgICAgICAgICAgY3R4LmNsb3NlUGF0aCgpO1xuICAgICAgICAgICAgY3R4LnN0cm9rZSgpO1xuICAgICAgICAgICAgY3R4LnJlc3RvcmUoKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLmRyYXcgPSBmdW5jdGlvbihjdHgsIHNjYWxlKSB7XG4gICAgICAgIGlmKHRoaXMuZHJhd2FibGUuc2hvdykge1xuICAgICAgICAgICAgY3R4LnNhdmUoKTtcbiAgICAgICAgICAgIGN0eC50cmFuc2xhdGUodGhpcy5kcmF3YWJsZS5wb3MueCwgdGhpcy5kcmF3YWJsZS5wb3MueSk7XG4gICAgICAgICAgICBjdHguZ2xvYmFsQWxwaGEgKj0gdGhpcy5kcmF3YWJsZS5vcGFjaXR5O1xuICAgICAgICAgICAgdmFyIG5ld1RyYWRlciA9IGZhbHNlO1xuICAgICAgICAgICAgZm9yKHZhciBpID0gMCwgbCA9IHRoaXMudHJhZGVycy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgICAgICB0aGlzLnRyYWRlcnNbaV0uZHJhdyhjdHgsIHNjYWxlKTtcbiAgICAgICAgICAgICAgICBpZih0aGlzLnRyYWRlcnNbaV0ubmV3KSB7XG4gICAgICAgICAgICAgICAgICAgIG5ld1RyYWRlciA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYobmV3VHJhZGVyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kcmF3YWJsZS5ib3JkZXJDb2xvciA9IFwiI0IzQjM2OVwiO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRyYXdhYmxlLmJvcmRlckNvbG9yID0gXCIjZWVlZWVlXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmRyYXdhYmxlLmRyYXdDaXJjbGUoY3R4KTtcbiAgICAgICAgICAgIHRoaXMuZHJhd2FibGUuZHJhd0ltYWdlSW5DaXJjbGUoY3R4KTtcbiAgICAgICAgICAgIHRoaXMuZHJhd2FibGUuZHJhd0JvcmRlckZvckNpcmNsZShjdHgsIHNjYWxlKTtcbiAgICAgICAgICAgIHRoaXMuZHJhd2FibGUuZHJhd1RleHQoY3R4LCBzY2FsZSk7XG4gICAgICAgICAgICBjdHgucmVzdG9yZSgpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHRoaXMuZGVsZXRlID0gZnVuY3Rpb24odHJhZGVzKSB7XG4gICAgICAgIHZhciBpbmRleCA9IHRyYWRlcy5pbmRleE9mKHRoaXMpO1xuICAgICAgICBmb3IodmFyIGkgPSAwLCBsID0gdGhpcy50cmFkZXJzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgdGhpcy50cmFkZXJzWzBdLmRlbGV0ZSh0cmFkZXMsIGluZGV4KTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLmFuaW1hdGVEZWxldGUgPSBmdW5jdGlvbih0cmFkZXMsIGluZGV4KSB7XG4gICAgICAgIHRoaXMuZHJhd2FibGUuYW5pbWF0ZShcInRleHRTaXplXCIsIDAsIDMwMCwgXCJlYXNlSW5PdXRcIiwgbnVsbCk7XG4gICAgICAgIHRoaXMuZHJhd2FibGUuYW5pbWF0ZShcInRleHRSZXBsYWNlXCIsIDAsIDMwMCwgXCJlYXNlSW5PdXRcIiwgbnVsbCk7XG4gICAgICAgIHRoaXMuZHJhd2FibGUuYW5pbWF0ZVZlY3RvcihcInRleHRQYWRkaW5nXCIsIG5ldyBWZWN0b3IyRCgwLCAwKSwgMzAwLCBcImVhc2VJbk91dFwiLCBudWxsKTtcbiAgICAgICAgdGhpcy5kcmF3YWJsZS5hbmltYXRlKFwib3BhY2l0eVwiLCAwLCAzMDAsIFwiZWFzZUluT3V0XCIsIG51bGwpO1xuICAgICAgICB0aGlzLmRyYXdhYmxlLmFuaW1hdGUoXCJyYWRpdXNcIiwgMCwgMzAwLCBcImVhc2VJbk91dFwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHRyYWRlcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgdGhpcy5wb3N0RHJhdyA9IGZ1bmN0aW9uKGN0eCwgc2NhbGUpIHtcbiAgICAgICAgaWYodGhpcy5kcmF3YWJsZS5zaG93KSB7XG4gICAgICAgICAgICBjdHguc2F2ZSgpO1xuICAgICAgICAgICAgY3R4Lmdsb2JhbEFscGhhICo9IHRoaXMuZHJhd2FibGUub3BhY2l0eTtcbiAgICAgICAgICAgIGN0eC50cmFuc2xhdGUodGhpcy5kcmF3YWJsZS5wb3MueCwgdGhpcy5kcmF3YWJsZS5wb3MueSk7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwLCBsID0gdGhpcy50cmFkZXJzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgIHRoaXMudHJhZGVyc1tpXS5wb3N0RHJhdyhjdHgsIHNjYWxlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGN0eC5yZXN0b3JlKCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgdGhpcy5jbGlja2VkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBpID0gMCwgbCA9IDAsIHQgPSBudWxsLCBtZSA9IHRoaXM7XG4gICAgICAgIGlmKCF0aGlzLm9wZW4pIHtcbiAgICAgICAgICAgIGZvcihsID0gdGhpcy50cmFkZXJzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgIHQgPSB0aGlzLnRyYWRlcnNbaV07XG4gICAgICAgICAgICAgICAgdC5kcmF3YWJsZS5zaG93ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0LmRyYXdhYmxlLmFuaW1hdGVWZWN0b3IoXCJwb3NcIiwgbmV3IFZlY3RvcjJEKDAsIHRoaXMuZHJhd2FibGUucmFkaXVzICsgdC5kcmF3YWJsZS5yYWRpdXMgKyAxNSksIDMwMCwgXCJlYXNlSW5PdXRcIiwgbnVsbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmRyYXdhYmxlLmFuaW1hdGVWZWN0b3IoXCJ0ZXh0UGFkZGluZ1wiLCBuZXcgVmVjdG9yMkQoMCwgMCksIDE1MCwgXCJlYXNlSW5cIiwgZnVuY3Rpb24oZG9uZSwgZHJhd2FibGUpIHtcbiAgICAgICAgICAgICAgICBkcmF3YWJsZS5hbmltYXRlVmVjdG9yKFwidGV4dFBhZGRpbmdcIiwgbmV3IFZlY3RvcjJEKDEwLCAxMCksIDE1MCwgXCJlYXNlT3V0XCIsIG51bGwpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmRyYXdhYmxlLmFuaW1hdGUoXCJ0ZXh0UmVwbGFjZVwiLCAwLCAxNTAsIFwiZWFzZUluXCIsIGZ1bmN0aW9uKGRvbmUsIGRyYXdhYmxlKSB7XG4gICAgICAgICAgICAgICAgZHJhd2FibGUuYW5pbWF0ZShcInRleHRSZXBsYWNlXCIsIDE1LCAxNTAsIFwiZWFzZU91dFwiLCBudWxsKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5kcmF3YWJsZS5hbmltYXRlKFwidGV4dFNpemVcIiwgMCwgMTUwLCBcImVhc2VJblwiLCBmdW5jdGlvbihkb25lLCBkcmF3YWJsZSkge1xuICAgICAgICAgICAgICAgIGRyYXdhYmxlLnRleHRCYWNrZ3JvdW5kID0gXCIjMkMzRTUwXCI7XG4gICAgICAgICAgICAgICAgZHJhd2FibGUuc2V0VGV4dChtZS5zdG9ja1ByaWNlLnRvTG9jYWxlU3RyaW5nKCdiZS1OTCcsIHsgc3R5bGU6ICdjdXJyZW5jeScsIGN1cnJlbmN5OiAnRVVSJ30pKTtcbiAgICAgICAgICAgICAgICBtZS5vcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBkcmF3YWJsZS5hbmltYXRlKFwidGV4dFNpemVcIiwgMTAsIDE1MCwgXCJlYXNlT3V0XCIsIG51bGwpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgZiA9IGZ1bmN0aW9uKGRvbmUsIGRyYXdhYmxlKSB7XG4gICAgICAgICAgICAgICAgZHJhd2FibGUuc2hvdyA9IGZhbHNlO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGZvcihsID0gdGhpcy50cmFkZXJzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgIHQgPSB0aGlzLnRyYWRlcnNbaV07XG4gICAgICAgICAgICAgICAgaWYodC5vcGVuKSB7XG4gICAgICAgICAgICAgICAgICAgIHQuY2xpY2tlZCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0LmRyYXdhYmxlLmFuaW1hdGVWZWN0b3IoXCJwb3NcIiwgbmV3IFZlY3RvcjJEKDAsIDApLCAzMDAsIFwiZWFzZUluT3V0XCIsIGYpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5kcmF3YWJsZS5hbmltYXRlVmVjdG9yKFwidGV4dFBhZGRpbmdcIiwgbmV3IFZlY3RvcjJEKDAsIDApLCAxNTAsIFwiZWFzZUluXCIsIGZ1bmN0aW9uKGRvbmUsIGRyYXdhYmxlKSB7XG4gICAgICAgICAgICAgICAgZHJhd2FibGUuYW5pbWF0ZVZlY3RvcihcInRleHRQYWRkaW5nXCIsIG5ldyBWZWN0b3IyRCgxMCwgMTApLCAxNTAsIFwiZWFzZU91dFwiLCBudWxsKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5kcmF3YWJsZS5hbmltYXRlKFwidGV4dFJlcGxhY2VcIiwgMCwgMTUwLCBcImVhc2VJblwiLCBmdW5jdGlvbihkb25lLCBkcmF3YWJsZSkge1xuICAgICAgICAgICAgICAgIGRyYXdhYmxlLmFuaW1hdGUoXCJ0ZXh0UmVwbGFjZVwiLCAxNSwgMTUwLCBcImVhc2VPdXRcIiwgbnVsbCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuZHJhd2FibGUuYW5pbWF0ZShcInRleHRTaXplXCIsIDAsIDE1MCwgXCJlYXNlSW5cIiwgZnVuY3Rpb24oZG9uZSwgZHJhd2FibGUpIHtcbiAgICAgICAgICAgICAgICBkcmF3YWJsZS5zZXRUZXh0KG1lLmRpZmZlcmVuY2UudG9Mb2NhbGVTdHJpbmcoJ2JlLU5MJywgeyBzdHlsZTogJ2N1cnJlbmN5JywgY3VycmVuY3k6ICdFVVInfSkpO1xuICAgICAgICAgICAgICAgIGlmKG1lLmRpZmZlcmVuY2UgPj0gMCkge1xuICAgICAgICAgICAgICAgICAgICBkcmF3YWJsZS50ZXh0QmFja2dyb3VuZCA9IFwiIzM2QjVEQlwiO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGRyYXdhYmxlLnRleHRCYWNrZ3JvdW5kID0gXCIjRTc0QzNDXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG1lLm9wZW4gPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBkcmF3YWJsZS5hbmltYXRlKFwidGV4dFNpemVcIiwgMTAsIDE1MCwgXCJlYXNlT3V0XCIsIG51bGwpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgdGhpcy5yZXF1ZXN0UmVkcmF3ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGZvcih2YXIgaSA9IDAsIGwgPSB0aGlzLnRyYWRlcnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICBpZih0aGlzLnRyYWRlcnNbaV0uZHJhd2FibGUucmVxdWVzdFJlZHJhdykge1xuICAgICAgICAgICAgICAgIHRoaXMuZHJhd2FibGUucmVxdWVzdFJlZHJhdyA9IHRydWU7XG4gICAgICAgICAgICAgICAgdGhpcy50cmFkZXJzW2ldLmRyYXdhYmxlLnJlcXVlc3RSZWRyYXcgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLmRyYXdhYmxlLnJlcXVlc3RSZWRyYXcpIHtcbiAgICAgICAgICAgIHRoaXMuZHJhd2FibGUucmVxdWVzdFJlZHJhdyA9IGZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG59OyIsInZhciB0cmFkZUNhbnZhcyA9IGZ1bmN0aW9uKCkge1xuICAgIGlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidHJhZGVzXCIpICE9PSBudWxsKSB7XG4gICAgICAgIHZhciB0cmFkZXMgPSBbXTtcbiAgICAgICAgdmFyIHRyYWRlcnMgPSBbXTtcbiAgICAgICAgdmFyIHByb2ZpbGUgPSBuZXcgRHJhd2FibGUoKTtcbiAgICAgICAgdmFyIHRyYXNoID0gbmV3IERyYXdhYmxlKCk7XG4gICAgICAgIHZhciBsb2dvcyA9IFtcImxvZ28wLnN2Z1wiLCBcImxvZ28xLnN2Z1wiLCBcImxvZ28yLnN2Z1wiLCBcImxvZ28zLnN2Z1wiLCBcImxvZ280LnN2Z1wiXTtcbiAgICAgICAgdmFyIHBlb3BsZSA9IFtbXCJDcmF6eSBIZWZmZVwiLCBcInRyYWRlcjAuanBnXCJdLCBbXCJNYXJpbm8gSG9zdGlub1wiLCBcInRyYWRlcjEuanBnXCJdLCBbXCJOaWNvbHNoIExhdmFuZGFcIiwgXCJ0cmFkZXIyLmpwZ1wiXSwgW1wieFhyb2JrZTY5WHhcIiwgXCJ0cmFkZXIzLmpwZ1wiXV07XG5cbiAgICAgICAgcHJvZmlsZS5zZXRJbWFnZShcImRpc3QvaW1hZ2VzL3Byb2ZpbGVzL3Byb2ZpbGUuanBnXCIpO1xuICAgICAgICBwcm9maWxlLnJhZGl1cyA9IDEwMDtcbiAgICAgICAgcHJvZmlsZS5jb2xvciA9IFwiI2ZmZmZmZlwiO1xuICAgICAgICBwcm9maWxlLmJvcmRlckNvbG9yID0gXCIjZWVlZWVlXCI7XG4gICAgICAgIHByb2ZpbGUuYm9yZGVyU2NhbGluZyA9IGZhbHNlO1xuICAgICAgICBwcm9maWxlLmJvcmRlcldpZHRoID0gMjtcbiAgICAgICAgcHJvZmlsZS50ZXh0U2l6ZSA9IDEyO1xuICAgICAgICBwcm9maWxlLnRleHRDb2xvciA9IFwiI2ZmZmZmZlwiO1xuICAgICAgICBwcm9maWxlLnRleHRGb250ID0gXCJTb3VyY2VTYW5zUHJvXCI7XG4gICAgICAgIHByb2ZpbGUudGV4dEFuY2hvciA9IG5ldyBWZWN0b3IyRCgwLjUsIDAuNSk7XG4gICAgICAgIHByb2ZpbGUudGV4dFBvcyA9IG5ldyBWZWN0b3IyRCgwLCAwLjUpO1xuICAgICAgICBwcm9maWxlLnRleHRQYWRkaW5nID0gbmV3IFZlY3RvcjJEKDEwLCAxMCk7XG4gICAgICAgIHByb2ZpbGUudGV4dFJlcGxhY2UgPSAxNTtcblxuICAgICAgICB0cmFzaC5zZXRJbWFnZShcImRpc3QvaW1hZ2VzL21pc2MvdHJhc2guc3ZnXCIpO1xuICAgICAgICB0cmFzaC5yYWRpdXMgPSA1MDtcbiAgICAgICAgdHJhc2guY29sb3IgPSBcIiNlZWVlZWVcIjtcbiAgICAgICAgdHJhc2guYm9yZGVyQ29sb3IgPSBcIiNlZWVlZWVcIjtcbiAgICAgICAgdHJhc2guYm9yZGVyU2NhbGluZyA9IGZhbHNlO1xuICAgICAgICB0cmFzaC5ib3JkZXJXaWR0aCA9IDI7XG4gICAgICAgIHRyYXNoLnBvcyA9IG5ldyBWZWN0b3IyRCh3aW5kb3cuaW5uZXJXaWR0aCAtIDEwMCwgd2luZG93LmlubmVySGVpZ2h0IC0gMTUwKTtcblxuICAgICAgICBmb3IodmFyIGogPSAwOyBqIDwgNDsgaisrKSB7XG4gICAgICAgICAgICB2YXIgYW1vdW50ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNTApO1xuICAgICAgICAgICAgdmFyIGluQXQgPSBNYXRoLmZsb29yKChNYXRoLnJhbmRvbSgpICogMjAwMDApKSAvIDEwMDtcbiAgICAgICAgICAgIHZhciB0eXBlID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMik7XG4gICAgICAgICAgICB2YXIgdHJhZGVyID0gW2Ftb3VudCwgaW5BdCwgdHlwZV07XG4gICAgICAgICAgICB0cmFkZXJzLnB1c2godHJhZGVyKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZGlmZiA9IDA7XG4gICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCA1OyBpKyspIHtcbiAgICAgICAgICAgIHZhciByID0gTWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiA0KTtcbiAgICAgICAgICAgIHZhciBwcGwgPSBbXTtcbiAgICAgICAgICAgIHZhciBzdG9ja1ByaWNlID0gTWF0aC5mbG9vcigoTWF0aC5yYW5kb20oKSAqIDIwMCkgKiAxMDApIC8gMTAwO1xuICAgICAgICAgICAgZm9yKHZhciBrID0gMDsgayA8IHI7IGsrKykge1xuICAgICAgICAgICAgICAgIHZhciB0ID0gbmV3IFRyYWRlcihwZW9wbGVba11bMF0sIHRyYWRlcnNba11bMF0sIHRyYWRlcnNba11bMV0sIHRyYWRlcnNba11bMl0sIFwiVGhpcyBsb29rcyBnb29kIVxcbkkgY2FuIGV2ZW4gcHV0IGEgc2Vjb25kIGxpbmVcXG5cXG5BbmQgZXZlbiBtb3JlXCIpO1xuICAgICAgICAgICAgICAgIHQuZHJhd2FibGUuc2V0SW1hZ2UoXCJkaXN0L2ltYWdlcy9wcm9maWxlcy9cIiArIHBlb3BsZVtrXVsxXSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbnZhcy5kcmF3KCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdC5wZXJjZW50YWdlID0gKE1hdGgucmFuZG9tKCkgKiAwLjQpICsgMC4xO1xuICAgICAgICAgICAgICAgIHBwbC5wdXNoKHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHRyYWRlID0gbmV3IFRyYWRlKHN0b2NrUHJpY2UsIHBwbCwgbnVsbCk7XG4gICAgICAgICAgICBkaWZmICs9IHRyYWRlLmRpZmZlcmVuY2U7XG4gICAgICAgICAgICB0cmFkZS5kcmF3YWJsZS5zZXRJbWFnZShcImRpc3QvaW1hZ2VzL2xvZ29zL1wiICsgbG9nb3NbaV0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGNhbnZhcy5kcmF3KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRyYWRlcy5wdXNoKHRyYWRlKTtcbiAgICAgICAgfVxuICAgICAgICB0cmFkZXMucHVzaChwcm9maWxlKTtcbiAgICAgICAgdHJhZGVzLnB1c2godHJhc2gpO1xuICAgICAgICBpZihkaWZmID49IDApIHtcbiAgICAgICAgICAgIHByb2ZpbGUudGV4dEJhY2tncm91bmQgPSBcIiMzNkI1REJcIjtcbiAgICAgICAgICAgIHByb2ZpbGUudGV4dFJlcGxhY2VDb2xvciA9IFwiIzM2QjVEQlwiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcHJvZmlsZS50ZXh0QmFja2dyb3VuZCA9IFwiI0U3NEMzQ1wiO1xuICAgICAgICAgICAgcHJvZmlsZS50ZXh0UmVwbGFjZUNvbG9yID0gXCIjRTc0QzNDXCI7XG4gICAgICAgIH1cbiAgICAgICAgcHJvZmlsZS5zZXRUZXh0KChNYXRoLmZsb29yKGRpZmYgKiAxMDApIC8gMTAwKS50b0xvY2FsZVN0cmluZygnYmUtTkwnLCB7c3R5bGU6ICdjdXJyZW5jeScsIGN1cnJlbmN5OiAnRVVSJ30pKTtcbiAgICAgICAgdmFyIGNhbnZhcyA9IG5ldyBDYW52YXMoMCwgNTAsIHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQgLSA1MCwgXCJ0cmFkZXNcIiwgdHJhZGVzKTtcbiAgICAgICAgY2FudmFzLmRyYXdDYWxsYmFjayA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGRpZmYgPSAwO1xuICAgICAgICAgICAgZm9yKHZhciBpID0gMCwgbCA9IGNhbnZhcy5vYmplY3RzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmKHR5cGVvZiBjYW52YXMub2JqZWN0c1tpXS5kaWZmZXJlbmNlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICBkaWZmICs9IGNhbnZhcy5vYmplY3RzW2ldLmRpZmZlcmVuY2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYoZGlmZiA+PSAwKSB7XG4gICAgICAgICAgICAgICAgcHJvZmlsZS50ZXh0QmFja2dyb3VuZCA9IFwiIzM2QjVEQlwiO1xuICAgICAgICAgICAgICAgIHByb2ZpbGUudGV4dFJlcGxhY2VDb2xvciA9IFwiIzM2QjVEQlwiO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBwcm9maWxlLnRleHRCYWNrZ3JvdW5kID0gXCIjRTc0QzNDXCI7XG4gICAgICAgICAgICAgICAgcHJvZmlsZS50ZXh0UmVwbGFjZUNvbG9yID0gXCIjRTc0QzNDXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwcm9maWxlLnNldFRleHQoKE1hdGguZmxvb3IoZGlmZiAqIDEwMCkgLyAxMDApLnRvTG9jYWxlU3RyaW5nKCdiZS1OTCcsIHtzdHlsZTogJ2N1cnJlbmN5JywgY3VycmVuY3k6ICdFVVInfSkpO1xuICAgICAgICB9O1xuICAgICAgICBwcm9maWxlLmRyYXcgPSBmdW5jdGlvbihjdHgsIHNjYWxlKSB7XG4gICAgICAgICAgICB0aGlzLmRyYXdDaXJjbGUoY3R4KTtcbiAgICAgICAgICAgIHRoaXMuZHJhd0ltYWdlSW5DaXJjbGUoY3R4KTtcbiAgICAgICAgICAgIHRoaXMuZHJhd0JvcmRlckZvckNpcmNsZShjdHgsIHNjYWxlKTtcbiAgICAgICAgICAgIHRoaXMuZHJhd1RleHQoY3R4LCBzY2FsZSk7XG4gICAgICAgIH07XG4gICAgICAgIHRyYXNoLmludGVyYWN0aW9uID0gZnVuY3Rpb24obW91c2VQb3MpIHtcbiAgICAgICAgICAgIHZhciBtb3VzZURpZmZlcmVuY2UgPSBtb3VzZVBvcy5zdWJWZWN0b3IoY2FudmFzLm1hcmdpbikuc3ViVmVjdG9yKHRoaXMucG9zKTtcbiAgICAgICAgICAgIHZhciBkaWZmZXJlbmNlID0gdGhpcy5yYWRpdXMgKiBjYW52YXMuc2NhbGU7XG4gICAgICAgICAgICByZXR1cm4gKG1vdXNlRGlmZmVyZW5jZS5sZW5ndGgoKSA8PSBkaWZmZXJlbmNlICYmIHRoaXMuc2hvdyk7XG4gICAgICAgIH07XG4gICAgICAgIHRyYXNoLmRyYXcgPSBmdW5jdGlvbihjdHgsIHNjYWxlKSB7XG4gICAgICAgICAgICB2YXIgcCA9IHRoaXMucG9zLnN1YlZlY3RvcihjYW52YXMub2Zmc2V0KS5zdWJWZWN0b3IoY2FudmFzLmNlbnRlcikubXVsKDEgLyBjYW52YXMuc2NhbGUpO1xuICAgICAgICAgICAgY3R4LnNhdmUoKTtcbiAgICAgICAgICAgIGN0eC50cmFuc2xhdGUocC54LCBwLnkpO1xuICAgICAgICAgICAgdGhpcy5kcmF3Q2lyY2xlKGN0eCk7XG4gICAgICAgICAgICB0aGlzLmRyYXdJbWFnZUluQ2lyY2xlKGN0eCk7XG4gICAgICAgICAgICB0aGlzLmRyYXdCb3JkZXJGb3JDaXJjbGUoY3R4LCBzY2FsZSk7XG4gICAgICAgICAgICBjdHgucmVzdG9yZSgpO1xuICAgICAgICB9O1xuICAgICAgICBjYW52YXMuZHJhdygpO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRyYWRlc1wiKS5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIGludGVyYWN0aW9uU3RhcnQoZSk7XG4gICAgICAgIH0pO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRyYWRlc1wiKS5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICB2YXIgdG91Y2ggPSBlLnRvdWNoZXNbMF07XG4gICAgICAgICAgICBpbnRlcmFjdGlvblN0YXJ0KHRvdWNoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBpbnRlcmFjdGlvblN0YXJ0ID0gZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgY2FudmFzLmludGVyYWN0aW9uU3RhcnQoZSwgZnVuY3Rpb24ob2JqZWN0LCBtb3VzZVBvcykge1xuICAgICAgICAgICAgICAgIHZhciBpbmRleDtcbiAgICAgICAgICAgICAgICBpZihvYmplY3QgaW5zdGFuY2VvZiBUcmFkZSkge1xuICAgICAgICAgICAgICAgICAgICBpbmRleCA9IGNhbnZhcy5vYmplY3RzLmluZGV4T2Yob2JqZWN0KTtcbiAgICAgICAgICAgICAgICAgICAgY2FudmFzLm9iamVjdHMucHVzaChjYW52YXMub2JqZWN0cy5zcGxpY2UoaW5kZXgsIDEpWzBdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYob2JqZWN0IGluc3RhbmNlb2YgVHJhZGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIG9iamVjdC5kcmF3YWJsZS5yZXR1cm5Qb3MgPSBvYmplY3QuZHJhd2FibGUucG9zO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZihvYmplY3QgPT09IFwic2VsZlwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGluZGV4ID0gY2FudmFzLm9iamVjdHMuaW5kZXhPZih0cmFzaCk7XG4gICAgICAgICAgICAgICAgICAgIGNhbnZhcy5vYmplY3RzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICAgICAgICAgIGNhbnZhcy5vYmplY3RzLnB1c2godHJhc2gpO1xuICAgICAgICAgICAgICAgICAgICBjYW52YXMuZHJhdygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYW52YXMuc2VsZWN0ZWQgPSBvYmplY3Q7XG4gICAgICAgICAgICAgICAgY2FudmFzLm1vdXNlUG9zID0gbW91c2VQb3M7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0cmFkZXNcIikuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBpbnRlcmFjdGlvbk1vdmUoZSk7XG4gICAgICAgIH0pO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRyYWRlc1wiKS5hZGRFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIHZhciB0b3VjaCA9IGUudG91Y2hlc1swXTtcbiAgICAgICAgICAgIGludGVyYWN0aW9uTW92ZSh0b3VjaCk7XG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgaW50ZXJhY3Rpb25Nb3ZlID0gZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgY2FudmFzLmludGVyYWN0aW9uTW92ZShlLCBmdW5jdGlvbihvYmplY3QsIG1vdXNlUG9zLCBkaWZmZXJlbmNlKSB7XG4gICAgICAgICAgICAgICAgaWYob2JqZWN0IGluc3RhbmNlb2YgVHJhZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgb2JqZWN0LmRyYXdhYmxlLm9wYWNpdHkgPSAwLjU7XG4gICAgICAgICAgICAgICAgICAgIG9iamVjdC5kcmF3YWJsZS5wb3MgPSBtb3VzZVBvcztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYob2JqZWN0IGluc3RhbmNlb2YgVHJhZGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIG9iamVjdC5kcmF3YWJsZS5vcGFjaXR5ID0gMC41O1xuICAgICAgICAgICAgICAgICAgICBvYmplY3QuZHJhd2FibGUucG9zID0gb2JqZWN0LmRyYXdhYmxlLnBvcy5hZGRWZWN0b3IoZGlmZmVyZW5jZS5yb3RhdGUoLW9iamVjdC5kcmF3YWJsZS5yb3RhdGlvbikubXVsKDEgLyBjYW52YXMuc2NhbGUpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYodHJhc2guaW50ZXJhY3Rpb24obmV3IFZlY3RvcjJEKGUucGFnZVgsIGUucGFnZVkpKSkge1xuICAgICAgICAgICAgICAgICAgICB0cmFzaC5jb2xvciA9IFwiI0U3NEMzQ1wiO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRyYXNoLmNvbG9yID0gXCIjZWVlZWVlXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhbnZhcy5kcmF3KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0cmFkZXNcIikuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIiwgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgaW50ZXJhY3Rpb25TdG9wKGUpO1xuICAgICAgICB9KTtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0cmFkZXNcIikuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIHZhciB0b3VjaCA9IGUudG91Y2hlc1swXTtcbiAgICAgICAgICAgIGludGVyYWN0aW9uU3RvcCh0b3VjaCk7XG4gICAgICAgIH0pO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgaW50ZXJhY3Rpb25TdG9wID0gZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgY2FudmFzLmludGVyYWN0aW9uU3RvcChmdW5jdGlvbihjbGljaywgb2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgdmFyIGksIGw7XG4gICAgICAgICAgICAgICAgaWYoY2xpY2spIHtcbiAgICAgICAgICAgICAgICAgICAgaWYob2JqZWN0IGluc3RhbmNlb2YgVHJhZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdC5kcmF3YWJsZS5vcGFjaXR5ID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IDAsIGwgPSBjYW52YXMub2JqZWN0cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2FudmFzLm9iamVjdHNbaV0ub3BlbiAmJiBjYW52YXMub2JqZWN0c1tpXSAhPT0gb2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbnZhcy5vYmplY3RzW2ldLmNsaWNrZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYob2JqZWN0IGluc3RhbmNlb2YgVHJhZGVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QuZHJhd2FibGUub3BhY2l0eSA9IDE7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYob2JqZWN0ID09PSBcInNlbGZcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gMCwgbCA9IGNhbnZhcy5vYmplY3RzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYW52YXMub2JqZWN0c1tpXS5vcGVuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbnZhcy5vYmplY3RzW2ldLmNsaWNrZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYodHlwZW9mIG9iamVjdC5jbGlja2VkID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QuY2xpY2tlZCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYob2JqZWN0IGluc3RhbmNlb2YgVHJhZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdC5kcmF3YWJsZS5vcGFjaXR5ID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHRyYXNoLmludGVyYWN0aW9uKG5ldyBWZWN0b3IyRChlLnBhZ2VYLCBlLnBhZ2VZKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QuZGVsZXRlKGNhbnZhcy5vYmplY3RzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZihvYmplY3QgaW5zdGFuY2VvZiBUcmFkZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdC5kcmF3YWJsZS5vcGFjaXR5ID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKG9iamVjdC5kcmF3YWJsZS5yZXR1cm5Qb3MubGVuZ3RoKCkgIT09IG9iamVjdC5kcmF3YWJsZS5wb3MubGVuZ3RoKCkgJiYgb2JqZWN0LmRyYXdhYmxlLnJldHVyblBvcy54ICE9PSBvYmplY3QuZHJhd2FibGUucG9zLngpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QuZHJhd2FibGUuYW5pbWF0ZVZlY3RvcihcInBvc1wiLCBvYmplY3QuZHJhd2FibGUucmV0dXJuUG9zLCA1MDAsIFwiZWFzZUluT3V0XCIsIG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYodHJhc2guaW50ZXJhY3Rpb24obmV3IFZlY3RvcjJEKGUucGFnZVgsIGUucGFnZVkpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdC5kZWxldGUoY2FudmFzLm9iamVjdHMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRyYXNoLmNvbG9yID0gXCIjZWVlZWVlXCI7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNhbnZhcy5kcmF3KCk7XG4gICAgICAgIH07XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidHJhZGVzXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJ3aGVlbFwiLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBzY3JvbGxJbnRlcmFjdGlvbihlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidHJhZGVzXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJET01Nb3VzZVNjcm9sbFwiLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBzY3JvbGxJbnRlcmFjdGlvbihlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBzY3JvbGxJbnRlcmFjdGlvbiA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHZhciBkZWx0YSA9IDA7XG4gICAgICAgICAgICBpZih0eXBlb2YgZS53aGVlbERlbHRhICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIGRlbHRhID0gZS53aGVlbERlbHRhIC8gMzAwO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBkZWx0YSA9IC1lLmRldGFpbCAvIDUwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHNjYWxlID0gY2FudmFzLnNjYWxlICsgZGVsdGE7XG4gICAgICAgICAgICBpZihzY2FsZSA+IDEuOCkge1xuICAgICAgICAgICAgICAgIHNjYWxlID0gMS44O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYoc2NhbGUgPCAwLjQpIHtcbiAgICAgICAgICAgICAgICBzY2FsZSA9IDAuNDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNjYWxlID0gTWF0aC5mbG9vcihzY2FsZSAqIDEwMCkgLyAxMDA7XG4gICAgICAgICAgICBjYW52YXMuc2NhbGUgPSBzY2FsZTtcbiAgICAgICAgICAgIHRyYXNoLnJhZGl1cyA9IDUwIC8gY2FudmFzLnNjYWxlO1xuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzY2FsZUNhbnZhc1wiKS52YWx1ZSA9IGNhbnZhcy5zY2FsZTtcbiAgICAgICAgICAgIGNhbnZhcy5kcmF3KCk7XG4gICAgICAgIH07XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2NhbGVDYW52YXNcIikuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNhbnZhcy5zY2FsZSA9IHBhcnNlRmxvYXQodGhpcy52YWx1ZSk7XG4gICAgICAgICAgICB0cmFzaC5yYWRpdXMgPSA1MCAvIGNhbnZhcy5zY2FsZTtcbiAgICAgICAgICAgIGNhbnZhcy5kcmF3KCk7XG4gICAgICAgIH0pO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJlc2V0T2Zmc2V0XCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNhbnZhcy5tb3ZlVG9DZW50ZXIoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG59OyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
