function Trade(t,e,a){this.img=null,this.imgSrc=t,this.savedPos=e,this.actualPos=null,this.traders=a,this.percentage=0;for(var r=0;r<this.traders.length;r++)this.percentage+=this.traders[r].totalPercentage*this.traders[r].percentage;this.rad=50+100*this.percentage;var s=this,l=new Image;l.src=this.imgSrc,l.onload=function(){s.img=l}}function Trader(t,e,a,r,s,l){this.name=t,this.img=null,this.imgSrc=e,this.totalPercentage=a,this.percentage=0,this.difference=r,this.actualPos=null,this.comment=s,this.type=l;var o=this,i=new Image;i.src=this.imgSrc,i.onload=function(){o.img=i}}Trade.prototype.reverse=function(t){var e=this.actualPos;e=e.subVector(t.offset),e=e.subVector(t.center),e=e.div(t.scale),this.savedPos=e;for(var a=180/(this.traders.length+1),r=0;r<this.traders.length;r++){var s=a*(r+1-(this.traders.length+1)/2);this.traders[r].calculate(t.scale,this.rad,s,this.actualPos)}},Trade.prototype.calculate=function(t){var e=this.savedPos;e=e.mul(t.scale),e=e.addVector(t.center),e=e.addVector(t.offset),this.actualPos=e;for(var a=180/(this.traders.length+1),r=0;r<this.traders.length;r++){var s=a*(r+1-(this.traders.length+1)/2);this.traders[r].calculate(t.scale,this.rad,s,e)}},Trade.prototype.preDraw=function(t){if(null!==this.img){t.ctx.strokeStyle="#2c3e50",t.ctx.lineWidth=.5*t.scale,t.ctx.beginPath();var e=t.center.addVector(t.offset);t.ctx.moveTo(e.x,e.y),t.ctx.lineTo(this.actualPos.x,this.actualPos.y),t.ctx.stroke(),t.ctx.closePath()}},Trade.prototype.draw=function(t){if(null!==this.img){t.cirLogo(this.actualPos.x,this.actualPos.y,this.rad,this.img);for(var e=0,a=0;a<this.traders.length;a++){var r=this.traders[a];e+=r.totalPercentage*r.percentage*r.difference,r.draw(t)}var s=Math.floor(e*t.startingBudget*100)/100,l=t.startingBudget/1e3;-l>s?t.ctx.fillStyle="#E74C3C":s>l?t.ctx.fillStyle="#36B5DB":t.ctx.fillStyle="#2C3E50",s=0>s?"- € "+Math.abs(s):"€ "+s;var o=12*t.scale;if(o>=8){t.ctx.font=o+"pt SourceSansPro";var i=t.ctx.measureText(s).width;t.ctx.beginPath(),t.ctx.rect(this.actualPos.x-i/2-10*t.scale,this.actualPos.y+this.rad*t.scale/2-o/2-10*t.scale,i+20*t.scale,o+20*t.scale),t.ctx.closePath(),t.ctx.fill(),t.ctx.fillStyle="#ffffff",t.ctx.fillText(s,this.actualPos.x-i/2,this.actualPos.y+this.rad*t.scale/2+o/2)}else t.cir(this.actualPos.x,this.actualPos.y+this.rad*t.scale/2,this.rad*t.scale*Math.abs(e)*10+this.rad*t.scale*.1)}},Trader.prototype.calculate=function(t,e,a,r){var s=new Vector2D(0,30);s=s.addVector(new Vector2D(0,e)),s=s.mul(t),s=s.rotate(a-90),s=s.addVector(r),this.actualPos=s},Trader.prototype.draw=function(t){if(null!==this.img){t.cirImg(this.actualPos.x,this.actualPos.y,25,this.img);var e=t.startingBudget/1e3,a=Math.floor(t.startingBudget*this.totalPercentage*this.percentage*this.difference*100)/100;-e>a?t.ctx.fillStyle="#E74C3C":a>e?t.ctx.fillStyle="#36B5DB":t.ctx.fillStyle="#2C3E50",t.cir(this.actualPos.x,this.actualPos.y,20*Math.abs(this.difference)+5)}},Trader.prototype.postDraw=function(t,e){var a=12*e;t.ctx.font="bold "+a+"pt SourceSansPro";var r=0,s=this.comment.split("\n");0===this.type?s.unshift("xx long at € xx,xx"):1===this.type&&s.unshift("xx short at € xx,xx");var l=Math.floor(t.startingBudget*this.totalPercentage*this.percentage*this.difference*100)/100;s.unshift(this.name+"p€ "+Math.abs(l));for(var o=0;o<s.length;o++){var i=t.ctx.measureText(s[o]).width;i>r&&(r=i)}t.ctx.fillStyle="#ffffff",t.ctx.beginPath(),t.ctx.rect(this.actualPos.x+25*t.scale,this.actualPos.y-a*s.length-a*(s.length-1)*1.2-25*t.scale-20,r+20,a*s.length+a*(s.length-1)*1.2+20),t.ctx.closePath(),t.ctx.fill();for(var n=0;n<s.length;n++)if(n>0&&(t.ctx.font=a+"pt SourceSansPro"),1===n&&0===this.type?t.ctx.fillStyle="#36B5DB":1===n&&1===this.type?t.ctx.fillStyle="#E74C3C":t.ctx.fillStyle="#2C3E50",0===n){var c=t.startingBudget/1e3,h=s[n].split("p");t.ctx.fillText(h[0],this.actualPos.x+25*t.scale+10,this.actualPos.y-a*(s.length-n)-a*(s.length-1)*1.2+1.2*n*a-25*t.scale),-c>l?(t.ctx.fillStyle="#E74C3C",h[1]="- "+h[1]):l>c?t.ctx.fillStyle="#36B5DB":t.ctx.fillStyle="#2C3E50",t.ctx.fillText(h[1],this.actualPos.x+25*t.scale+10+r-t.ctx.measureText(h[1]).width,this.actualPos.y-a*(s.length-n)-a*(s.length-1)*1.2+1.2*n*a-25*t.scale)}else t.ctx.fillText(s[n],this.actualPos.x+25*t.scale+10,this.actualPos.y-a*(s.length-n)-a*(s.length-1)*1.2+1.2*n*a-25*t.scale)};var trades=[],traders=[],logos=["logo0.svg","logo1.svg","logo2.svg","logo3.svg","logo4.svg"],people=[["Crazy Heffe","trader0.jpg"],["Marino Hostino","trader1.jpg"],["Nicolsh Lavanda","trader2.jpg"],["xXrobke69Xx","trader3.jpg"]];!function(){for(var t=0;4>t;t++){var e=.15*Math.random()+.1,a=Math.random()-.5,r=Math.floor(2*Math.random());traders.push(new Trader(people[t][0],"dist/images/"+people[t][1],e,a,"This just looks good!\nI can even put a second line here\n\nMultiline spaces are supported",r))}for(var s=0;5>s;s++){for(var l=Math.floor(Math.random()*window.innerWidth-window.innerWidth/2),o=Math.floor(Math.random()*(window.innerHeight-50)-(window.innerHeight-50)/2),i=Math.ceil(4*Math.random()),n=[],c=0;i>c;c++){var h=new Trader(traders[c].name,traders[c].imgSrc,traders[c].totalPercentage,traders[c].difference,traders[c].comment,traders[c].type);h.percentage=.4*Math.random()+.1,n.push(h)}trades.push(new Trade("dist/images/"+logos[s],new Vector2D(l,o),n))}for(var d=new Canvas(window.innerWidth,window.innerHeight-50,"trades","#eeeeee",trades),u=0;u<d.objs.length;u++)d.objs[u].calculate(d);d.drawCanvas()}(),function(){"use strict";var t=angular.module("app",["ngRoute"]);t.config(function(t){t.when("/home",{templateUrl:"pages/home.html",controller:"mainController"}).when("/profile/:id",{templateUrl:"pages/profile.html",controller:"profileController"}).when("/balanceHistory/:id",{templateUrl:"pages/balanceHistory.html",controller:"balanceController"}).when("/deposit/:id",{templateUrl:"pages/deposit.html",controller:"balanceController"}).when("/withdraw/:id",{templateUrl:"pages/withdraw.html",controller:"balanceController"}).otherwise({redirectTo:"/home"})})}(),function(){"use strict";var t=function(t,e,a){t.user={},t.user.userId="1",t.user.firstName="Marijn",t.user.lastName="Hosten",t.user.depositAmount=0,t.user.currentAmount=2e3,t.deposit=function(e){t.user.currentAmount+=e.depositAmount,a.location.hash="/home"},t.isEnabled=function(){return 0===t.user.depositAmount||"undefined"==typeof t.user.depositAmount?!0:!1}};angular.module("app").controller("balanceController",["$scope","$routeParams","$window",t])}(),function(){"use strict";var t=function(t){t.user={},t.user.userId="1",t.user.firstName="Marijn",t.user.lastName="Hosten",t.user.currentAmount=2e3;var e={id:9,firstName:"Anna",lastName:"Abcd",followers:27},a={id:2,firstName:"Bob",lastName:"Abcd",followers:28},r={id:3,firstName:"Christine",lastName:"Abcd",followers:105},s={id:4,firstName:"Dave",lastName:"Abcd",followers:30},l={id:5,firstName:"Eric",lastName:"Abcd",followers:2},o={id:6,firstName:"Francis",lastName:"Abcd",followers:0},i={id:7,firstName:"Gaben",lastName:"Abcd",followers:299},n={id:8,firstName:"Harold",lastName:"Abcd",followers:4};t.traders=[e,a,r,s,l,o,i,n]};angular.module("app").controller("mainController",["$scope",t])}(),function(){"use strict";var t=function(t,e,a,r){var s=e.id;t.user=r.getById(s),t.isEnabled=function(){return!1},t.submitForm=function(t){alert("changes saved"),a.location.hash="/home"}};angular.module("app").controller("profileController",["$scope","$routeParams","$window","userService",t])}();
//# sourceMappingURL=data:application/json;base64,
