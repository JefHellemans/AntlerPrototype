function Trader(e,t,r,a,s,o){this.name=e,this.totalPercentage=t,this.percentage=a,this.inAt=r,this.comment=s,this.type=o,this.drawable=new Drawable,this.drawable.color="#ffffff",this.drawable.borderColor="#eeeeee",this.drawable.borderWidth=2,this.drawable.borderScaling=!1,this.drawable.setText("[b]"+this.name+"[/b][align=right]Test[/align]\n"+s),this.drawable.textFont="SourceSansPro",this.drawable.textAnchor=new Vector2D(0,1),this.drawable.textBackground="#ffffff",this.drawable.textPadding=new Vector2D(0,0),this.drawable.textScaling=!1,this.drawable.textPos=new Vector2D(1,-1),this.drawable.textColor="#36B5DB",this.drawable.pos=new Vector2D(0,0),this.drawable.radius=25,this.drawable.show=!1,this.open=!1,this.draw=function(e,t,r){if(this.drawable.show){var a=this.drawable.pos;this.drawable.pos=this.drawable.pos.rotate(r-90),e.save(),e.translate(this.drawable.pos.x,this.drawable.pos.y),this.drawable.drawCircle(e),this.drawable.drawImageInCircle(e),this.drawable.drawBorderForCircle(e,t),e.restore(),this.drawable.pos=a}},this.postDraw=function(e,t,r){if(this.drawable.show){var a=this.drawable.pos;this.drawable.pos=this.drawable.pos.rotate(r-90),e.save(),e.translate(this.drawable.pos.x,this.drawable.pos.y),this.drawable.drawText(e,t),e.restore(),this.drawable.pos=a}},this.clicked=function(){var e=this;this.open?(this.drawable.animate("textSize",0,200,"easeInOut",null),this.drawable.animateVector("textPadding",new Vector2D(0,0),200,"easeInOut",function(t,r){t&&(e.open=!1)})):(this.drawable.animate("textSize",12,200,"easeInOut",null),this.drawable.animateVector("textPadding",new Vector2D(10,10),200,"easeInOut",function(t,r){t&&(e.open=!0)}))},this.interaction=function(e,t,r){var a=e.subVector(this.drawable.pos.rotate(r-90).mul(t)),s=0;return 0!==this.drawable.radius&&(s=this.drawable.radius*t),0!==this.drawable.size.length()&&(s=this.drawable.size.length()*t),a.length()<=s&&this.drawable.show?this:!1}}var Trade=function(e,t){this.stockPrice=e,this.roi=0,this.traders=t,this.drawable=new Drawable,this.percentage=0;for(var r=0,a=this.traders.length;a>r;r++){var s=this.traders[r];this.percentage+=s.totalPercentage*s.percentage,s.pos=new Vector2D(0,0)}this["new"]=!0,this.lineColor="#B3B369",this.open=!1,this.drawable.textSize=10,this.drawable.imgFill=!1;var o=Math.floor(Math.random()*window.innerWidth-window.innerWidth/2),i=Math.floor(Math.random()*(window.innerHeight-50)-(window.innerHeight-50)/2);this.drawable.pos=new Vector2D(o,i),this.drawable.radius=Math.floor(35*Math.random()+35),this.drawable.color="#ffffff",this.drawable.borderWidth=2,this.drawable.borderColor="#B3B369",this.drawable.borderScaling=!1,this.drawable.setText(e+""),this.drawable.textColor="#ffffff",this.drawable.textFont="SourceSansPro",this.drawable.textAnchor=new Vector2D(.5,.5),this.drawable.textPos=new Vector2D(0,.5),this.drawable.textBackground="#36B5DB",this.drawable.textPadding=new Vector2D(10,10),this.drawable.textReplaceColor="#36B5DB",this.drawable.textReplace=15,this.interaction=function(e,t){var r=e.subVector(this.drawable.pos.mul(t)),a=0;if(0!==this.drawable.radius&&(a=this.drawable.radius*t),0!==this.drawable.size.length()&&(a=this.drawable.size.length()*t),r.length()<=a)return this["new"]&&(this["new"]=!1,this.drawable.borderColor="#eeeeee",this.lineColor="#2C3E50"),this;for(var o=e.subVector(this.drawable.pos.mul(t)),i=180/(this.traders.length+1),n=0,l=this.traders.length;l>n;n++){var d=i*(n+1-(this.traders.length+1)/2),h=this.traders[n].interaction(o,t,d);if(h!==!1){for(var w=0,c=this.traders.length;c>w;w++)s=this.traders[w],s.open&&s.clicked();return h}}return!1},this.preDraw=function(e,t){this.drawable.show&&(e.strokeStyle=this.lineColor,e.lineWidth=.5,e.beginPath(),e.moveTo(0,0),e.lineTo(this.drawable.pos.x,this.drawable.pos.y),e.closePath(),e.stroke())},this.draw=function(e,t){if(this.drawable.show){e.save(),e.translate(this.drawable.pos.x,this.drawable.pos.y);for(var r=180/(this.traders.length+1),a=0,s=this.traders.length;s>a;a++){var o=r*(a+1-(this.traders.length+1)/2);this.traders[a].draw(e,t,o)}this.drawable.drawCircle(e),this.drawable.drawImageInCircle(e),this.drawable.drawBorderForCircle(e,t),this.drawable.drawText(e,t),e.restore()}},this.postDraw=function(e,t){if(this.drawable.show){e.save(),e.translate(this.drawable.pos.x,this.drawable.pos.y);for(var r=180/(this.traders.length+1),a=0,s=this.traders.length;s>a;a++){var o=r*(a+1-(this.traders.length+1)/2);this.traders[a].postDraw(e,t,o)}e.restore()}},this.clicked=function(){var e=0,t=0,r=null;if(this.open){for(t=this.traders.length;t>e;e++)r=this.traders[e],r.open&&r.clicked(),r.drawable.animateVector("pos",new Vector2D(0,0),300,"easeInOut",null);this.open=!1}else{for(t=this.traders.length;t>e;e++)r=this.traders[e],r.drawable.show=!0,r.drawable.animateVector("pos",new Vector2D(0,this.drawable.radius+r.drawable.radius+15),300,"easeInOut",null);this.open=!0}},this.requestRedraw=function(){for(var e=0,t=this.traders.length;t>e;e++)this.traders[e].drawable.requestRedraw&&(this.drawable.requestRedraw=!0,this.traders[e].drawable.requestRedraw=!1);return this.drawable.requestRedraw?(this.drawable.requestRedraw=!1,!0):!1}},trades=[],traders=[],profile=new Drawable,logos=["logo0.svg","logo1.svg","logo2.svg","logo3.svg","logo4.svg"],people=[["Crazy Heffe","trader0.jpg"],["Marino Hostino","trader1.jpg"],["Nicolsh Lavanda","trader2.jpg"],["xXrobke69Xx","trader3.jpg"]];!function(){profile.setImage("dist/images/profile.jpg"),profile.radius=100,profile.color="#ffffff",profile.borderColor="#eeeeee",profile.borderScaling=!1,profile.borderWidth=2,trades.push(profile);for(var e=0;4>e;e++){var t=.15*Math.random()+.1,r=.4*Math.random()+.1,a=200*Math.random(),s=Math.floor(2*Math.random()),o=[t,r,a,s];traders.push(o)}for(var i=0;5>i;i++){for(var n=Math.ceil(4*Math.random()),l=[],d=Math.floor(200*Math.random()*100)/100,h=0;n>h;h++){var w=new Trader(people[h][0],traders[h][0],traders[h][2],traders[h][1],"This looks good!\nI can even put a second line\n\nAnd even more",traders[h][3]);w.drawable.setImage("dist/images/"+people[h][1],function(){u.draw()}),w.percentage=.4*Math.random()+.1,l.push(w)}var c=new Trade(d,l);c.drawable.setImage("dist/images/"+logos[i],function(){u.draw()}),trades.push(c)}var u=new Canvas(0,50,window.innerWidth,window.innerHeight-50,"trades",trades);profile.draw=function(e,t){this.drawCircle(e),this.drawImageInCircle(e),this.drawBorderForCircle(e,t)},u.draw(),document.getElementById("trades").addEventListener("mousedown",function(e){u.interactionStart(e,function(e,t){if(e instanceof Trade){var r=u.objects.indexOf(e);u.objects.push(u.objects.splice(r,1)[0])}u.selected=e,u.mousePos=t})}),document.getElementById("trades").addEventListener("mousemove",function(e){u.interactionMove(e,function(e,t){e instanceof Trade&&(e.drawable.pos=t,u.draw())})}),document.getElementById("trades").addEventListener("mouseup",function(){u.interactionStop(function(e){if(null!==e){var t,r;if(e instanceof Trade)for(t=0,r=u.objects.length;r>t;t++)u.objects[t].open&&u.objects[t]!==e&&u.objects[t].clicked();if("self"===e)for(t=0,r=u.objects.length;r>t;t++)u.objects[t].open&&u.objects[t].clicked();"function"==typeof e.clicked&&e.clicked()}})}),document.getElementById("resetOffset").addEventListener("click",function(){u.moveToCenter()}),document.getElementById("scaleCanvas").addEventListener("mousemove",function(){u.scale=this.value,u.draw()})}(),function(){"use strict";var e=angular.module("app",["ngRoute"]);e.config(function(e){e.when("/home",{templateUrl:"pages/home.html",controller:"mainController"}).when("/profile/:id",{templateUrl:"pages/profile.html",controller:"profileController"}).when("/balanceHistory/:id",{templateUrl:"pages/balanceHistory.html",controller:"balanceController"}).when("/deposit/:id",{templateUrl:"pages/deposit.html",controller:"balanceController"}).when("/withdraw/:id",{templateUrl:"pages/withdraw.html",controller:"balanceController"}).otherwise({redirectTo:"/home"})})}(),function(){"use strict";var e=function(e,t,r){e.user={},e.user.userId="1",e.user.firstName="Marijn",e.user.lastName="Hosten",e.user.depositAmount=0,e.user.currentAmount=2e3,e.deposit=function(t){e.user.currentAmount+=t.depositAmount,r.location.hash="/home"},e.isEnabled=function(){return 0===e.user.depositAmount||"undefined"==typeof e.user.depositAmount?!0:!1}};angular.module("app").controller("balanceController",["$scope","$routeParams","$window",e])}(),function(){"use strict";var e=function(e){e.user={},e.user.userId="1",e.user.firstName="Marijn",e.user.lastName="Hosten",e.user.currentAmount=2e3;var t={id:9,firstName:"Anna",lastName:"Abcd",followers:27},r={id:2,firstName:"Bob",lastName:"Abcd",followers:28},a={id:3,firstName:"Christine",lastName:"Abcd",followers:105},s={id:4,firstName:"Dave",lastName:"Abcd",followers:30},o={id:5,firstName:"Eric",lastName:"Abcd",followers:2},i={id:6,firstName:"Francis",lastName:"Abcd",followers:0},n={id:7,firstName:"Gaben",lastName:"Abcd",followers:299},l={id:8,firstName:"Harold",lastName:"Abcd",followers:4};e.traders=[t,r,a,s,o,i,n,l]};angular.module("app").controller("mainController",["$scope",e])}(),function(){"use strict";var e=function(e,t,r,a){var s=t.id;e.user=a.getById(s),e.isEnabled=function(){return!1},e.submitForm=function(e){alert("changes saved"),r.location.hash="/home"}};angular.module("app").controller("profileController",["$scope","$routeParams","$window","userService",e])}();
//# sourceMappingURL=data:application/json;base64,
