Math.square=function(t){return t*t},Math.toRadians=function(t){return t*Math.PI/180},Math.toDegrees=function(t){return 180*t/Math.PI};var Vector2D=function(t,i){this.x=t,this.y=i};Vector2D.prototype={length:function(){return Math.sqrt(Math.square(this.x)+Math.square(this.y))},dot:function(t){return this.x*t.x+this.y*t.y},normalize:function(){var t=this.length();this.x/=t,this.y/=t},add:function(t){return new Vector2D(this.x+t,this.y+t)},addVector:function(t){return new Vector2D(this.x+t.x,this.y+t.y)},sub:function(t){return new Vector2D(this.x-t,this.y-t)},subVector:function(t){return new Vector2D(this.x-t.x,this.y-t.y)},mul:function(t){return new Vector2D(this.x*t,this.y*t)},mulVector:function(t){return new Vector2D(this.x*t.x,this.y*t.y)},div:function(t){return new Vector2D(this.x/t,this.y/t)},divVector:function(t){return new Vector2D(this.x/t.x,this.y/t.y)},rotate:function(t){var i=Math.toRadians(t),e=Math.cos(i),s=Math.sin(i);return new Vector2D(this.x*e-this.y*s,this.x*s+this.y*e)}};var Animation=function(t,i,e,s,h,o){this.element=t,this.from=i,this.difference=e-i,this.easing=h,this.cb=o,this.pos=0,this.end=s/10,this.timer=null};Animation.prototype.start=function(t){var i=this;this.timer=setInterval(function(){i.pos++;var e=0;switch(i.easing){case"linear":e=i.linear(i.difference,i.pos,i.end,i.from);break;case"easeIn":e=i.easeIn(i.difference,i.pos,i.end,i.from);break;case"easeOut":e=i.easeOut(i.difference,i.pos,i.end,i.from);break;case"easeInOut":e=i.easeInOut(i.difference,i.pos,i.end,i.from)}t(e),i.pos>=i.end&&(clearInterval(i.timer),i.timer=null,i.pos=0,"function"==typeof i.cb&&i.cb(!0,i.element))},10)},Animation.prototype.stop=function(){clearInterval(this.timer),this.timer=null,"function"==typeof this.cb&&this.cb(!1,this.element)},Animation.prototype.linear=function(t,i,e,s){return t*i/e+s},Animation.prototype.easeIn=function(t,i,e,s){return i/=e,t*i*i+s},Animation.prototype.easeOut=function(t,i,e,s){return i/=e,-t*i*(i-2)+s},Animation.prototype.easeInOut=function(t,i,e,s){return i/=e/2,1>i?t/2*i*i+s:(i--,-t/2*(i*(i-2)-1)+s)};var Paragraph=function(t){this.parts=[],this.checkForStyle(t,"[i]","[/i]","italic")||this.checkForStyle(t,"[b]","[/b]","bold")||this.checkForStyle(t,"[size=","[/size]","size")||this.checkForStyle(t,"[font=","[/font]","font")||this.checkForStyle(t,"[align=","[/align]","align")||this.checkForStyle(t,"[color=","[/color]","color")||(this.parts=[t])};Paragraph.prototype.getFont=function(t,i,e,s){return"undefined"!=typeof this.italic&&(t=this.italic),"undefined"!=typeof this.bold&&(i=this.bold),"undefined"!=typeof this.size&&(e=this.size),"undefined"!=typeof this.font&&(s=this.font),[t,i,e,s]},Paragraph.prototype.fontToText=function(t,i,e,s){var h="";return t&&(h+="italic "),i&&(h+="bold "),h+=e+"pt "+s},Paragraph.prototype.draw=function(t,i,e,s,h,o,n,r,a,c,l){var u=this.getFont(e,s,h,o),f=c.x;if("undefined"!=typeof this.align&&(n=this.align),"undefined"!=typeof this.color&&(r=this.color),1!==this.parts.length||this.parts[0]instanceof Paragraph){for(var d=0,g=this.parts.length;g>d;d++)if("function"==typeof this.parts[d].draw&&this.parts[d].draw(t,i,u[0],u[1],u[2],u[3],n,r,a,c,l),1===this.parts[d].length&&"function"==typeof this.parts[d].measure){var p=this.parts[d].measure(t,i,u[0],u[1],u[2],u[3],a);c.x+=p.x}c.x=f}else a||(u[2]*=1/i),"center"===n&&(c=c.addVector(new Vector2D(l,0).mul(.5))),"right"===n&&(c=c.addVector(new Vector2D(l,0))),t.font=this.fontToText(u[0],u[1],u[2],u[3]),t.textAlign=n,t.fillStyle=r,t.fillText(this.parts[0],c.x,c.y)},Paragraph.prototype.measure=function(t,i,e,s,h,o,n){var r=new Vector2D(0,0),a=this.getFont(e,s,h,o);if(1===this.parts.length)n||(a[2]*=1/i),t.font=this.fontToText(a[0],a[1],a[2],a[3]),r.y=a[2],r.x=t.measureText(this.parts[0]).width;else for(var c=0,l=this.parts.length;l>c;c++)if("function"==typeof this.parts[c].measure){var u=this.parts[c].measure(t,i,a[0],a[1],a[2],a[3],n);u.y>r.y&&(r.y=u.y),r.x+=u.x}return r},Paragraph.prototype.checkForStyle=function(t,i,e,s){var h=t.split(i);if(h.length>=2){var o=h.shift();o.length>0&&!(o instanceof Paragraph)?this.parts.push(new Paragraph(o)):o instanceof Paragraph&&this.parts.push(o);for(var n=0,r=h.length;r>n;n++){var a=h[n].split(e);if(i.indexOf("=")>-1){a[0]=a[0].split("]");for(var c=a[0].shift(),l="",u=0,f=a[0].length;f>u;u++)l+=a[0][u],f-1>u&&(l+="]");a[0]=l}var d=new Paragraph(a[0]);switch(0!==a[1].length||a[1]instanceof Paragraph?a[1]instanceof Paragraph?(this.parts.push(d),this.parts.push(a[1])):(this.parts.push(d),this.parts.push(new Paragraph(a[1]))):this.parts.push(d),s){case"italic":d.italic=!0;break;case"bold":d.bold=!0;break;case"size":d.size=c;break;case"font":d.font=c;break;case"align":d.align=c;break;case"color":d.color=c}}return!0}return!1};var Drawable=function(){this.color="#000000",this.img=null,this.imgFill=!0,this.borderColor="#000000",this.borderWidth=0,this.borderScaling=!0,this.text=[],this.textItalic=!1,this.textBold=!1,this.textSize=0,this.textMinSize=6,this.textFont="Arial",this.textAlign="left",this.textColor="#000000",this.textPos=new Vector2D(0,0),this.textAnchor=new Vector2D(0,0),this.textBackground=null,this.textReplace=20,this.textReplaceColor=null,this.textSpacing=1.2,this.textPadding=new Vector2D(0,0),this.textScaling=!0,this.pos=new Vector2D(0,0),this.radius=0,this.size=new Vector2D(0,0),this.show=!0,this.requestRedraw=!1,this.animations=[],this.drawRectangle=function(t){t.fillStyle=this.color;var i=new Vector2D(0,0).subVector(this.size.div(2));t.fillRect(i.x,i.y,this.size.x,this.size.y)},this.drawImage=function(t){if(null!==this.img){var i=0;i=this.imgFill?this.img.width>this.img.height?this.img.height:this.img.width:this.img.width>this.img.height?this.img.width:this.img.height;var e=new Vector2D(this.img.width,this.img.height).div(i).mulVector(this.size).subVector(this.size).mul(-.5),s=new Vector2D(0,0).subVector(this.size.div(2));t.drawImage(this.img,e.x,e.y,this.size.x,this.size.y,s.x,s.y,this.size.x,this.size.y)}else console.log("[DRAWABLE][drawImage]: Could not draw image for",this,"since this.img is null")},this.drawBorder=function(t,i){t.strokeStyle=this.borderColor;var e=this.borderWidth;this.borderScaling||(e*=1/i),t.lineWidth=e;var s=new Vector2D(0,0).subVector(this.size.div(2));t.strokeRect(s.x,s.y,this.size.x,this.size.y)},this.drawCircle=function(t){t.fillStyle=this.color,t.beginPath(),t.arc(0,0,this.radius,0,2*Math.PI,!1),t.closePath(),t.fill()},this.drawImageInCircle=function(t){if(null!==this.img){t.save(),t.beginPath(),t.arc(0,0,this.radius,0,2*Math.PI,!0),t.clip();var i=1,e=new Vector2D(0,0).sub(this.radius),s=new Vector2D(this.radius,this.radius).mul(2),h=new Vector2D(0,0);if(this.imgFill)i=this.img.width>this.img.height?this.img.height:this.img.width,h=new Vector2D(this.img.width,this.img.height).div(i).sub(1).mul(i).div(2);else{i=this.img.width>this.img.height?this.img.width:this.img.height;var o=new Vector2D(this.img.width,this.img.height).div(i).sub(1).mul(-1);0!==o.x&&(o.x=1),0!==o.y&&(o.y=1),s=new Vector2D(this.img.width,this.img.height).div(i).mulVector(s),e=e.subVector(o.mulVector(s).div(2)),e=e.addVector(o.mul(this.radius))}t.drawImage(this.img,h.x,h.y,this.img.width-2*h.x,this.img.height-2*h.y,e.x,e.y,s.x,s.y),t.closePath(),t.restore()}else console.log("[DRAWABLE][drawImageInCircle]: Could not draw image for",this,"since this.img is null")},this.drawBorderForCircle=function(t,i){t.beginPath(),t.strokeStyle=this.borderColor;var e=this.borderWidth;this.borderScaling||(e*=1/i),t.lineWidth=e,t.arc(0,0,this.radius,0,2*Math.PI,!0),t.stroke(),t.closePath()},this.drawText=function(t,i){if(null!==this.text){var e=this.textSize;if(this.textScaling&&(e*=i),e>=this.textMinSize){var s=0,h=0,o=0,n=0,r=new Vector2D(0,0);for(n=this.text.length;n>o;o++){var a=this.text[o].measure(t,i,this.textItalic,this.textBold,this.textSize,this.textFont,this.textScaling);if(a.x>s&&(s=a.x),h+=a.y,n-o>1){var c=this.textSpacing*this.textSize;this.textScaling||(c*=1/i),h+=c}}if(null!==this.textBackground){t.fillStyle=this.textBackground;var l=this.textPadding;this.textScaling||(l=l.mul(1/i));var u=l.mul(2).addVector(new Vector2D(s,h)),f=this.textPos;0!==this.radius&&(f=f.mul(this.radius)),0!==this.size.length()&&(f=f.mulVector(this.size));var d=f.subVector(u.mulVector(this.textAnchor));t.fillRect(d.x,d.y,u.x,u.y),r=d.addVector(l)}for(o=0,n=this.text.length;n>o;o++){t.fillStyle=this.textColor;var g=this.text[o].measure(t,i,this.textItalic,this.textBold,this.textSize,this.textFont,this.textScaling).y,p=this.textSpacing*this.textSize;this.textScaling||(p*=1/i),g+=p,this.text[o].draw(t,i,this.textItalic,this.textBold,this.textSize,this.textFont,this.textAlign,this.textColor,this.textScaling,r,s),r=r.addVector(new Vector2D(0,g))}}else if(null!==this.textReplaceColor){t.fillStyle=this.textReplaceColor;var x;this.textReplace instanceof Vector2D?(x=this.textPos.mulVector(this.size).subVector(this.textReplace.mulVector(this.textAnchor)),t.fillRect(x.x,x.y,this.textReplace.x,this.textReplace.y)):this.textReplace>0&&(x=this.textPos.mul(this.radius).subVector(this.textAnchor.sub(.5).mul(this.textReplace)),t.beginPath(),t.arc(x.x,x.y,this.textReplace,0,2*Math.PI,!1),t.closePath(),t.fill())}}else console.log("[DRAWABLE][drawText]: Could not draw text for",this,"since this.text is null")},this.animate=function(t,i,e,s,h){var o=new Animation(this,this[t],i,e,s,h);this.animations.push(o);var n=this;return o.start(function(i){n[t]=i,n.requestRedraw=!0}),o},this.animateVector=function(t,i,e,s,h){var o=this,n=new Animation(this,this[t].x,i.x,e,s,h),r=new Animation(this,this[t].y,i.y,e,s,h);this.animations.push(n),this.animations.push(r),n.start(function(i){o[t].x=i,o.requestRedraw=!0}),r.start(function(i){o[t].y=i,o.requestRedraw=!0})},this.stopAnimation=function(t){t.stop();var i=this.animations.indexOf(t);i>-1&&this.animations.splice(i,1)},this.stopAnimating=function(){for(var t=this.animations.length-1;t>=0;t--)this.animations[t].stop();this.animations=[]}};Drawable.prototype.setImage=function(t,i){this.img=new Image,this.img.src=t,"function"==typeof i&&this.show&&(this.img.onload=i)},Drawable.prototype.setText=function(t){for(var i=t.split("\n"),e=0,s=i.length;s>e;e++)this.text.push(new Paragraph(i[e]))},Drawable.prototype.interaction=function(t,i){var e=t.subVector(this.pos.mul(i)),s=0;return 0!==this.radius&&(s=this.radius*i),0!==this.size.length()&&(s=this.size.length()*i),e.length()<=s&&this.show?this:!1};var Canvas=function(t,i,e,s,h,o){this.width=e,this.height=s,this.margin=new Vector2D(t,i),this.ctx=document.getElementById(h).getContext("2d"),this.ctx.canvas.width=e,this.ctx.canvas.height=s,this.center=new Vector2D(e/2,s/2),this.offset=new Vector2D(0,0),this.scale=1,this.objects=o,this.selected=null,this.startPos=new Vector2D(0,0),this.mousePos=new Vector2D(0,0),this.focus=null,this.movingCanvas=null;var n=this;setInterval(function(){for(var t=!1,i=0,e=n.objects.length;e>i;i++)"function"==typeof n.objects[i].requestRedraw?n.objects[i].requestRedraw()&&(t=!0):n.objects[i].requestRedraw&&(t=!0,n.objects[i].requestRedraw=!1);t&&n.draw()},10)};Canvas.prototype.clear=function(){this.ctx.clearRect(0,0,this.width,this.height)},Canvas.prototype.draw=function(t){this.clear(),this.ctx.save(),this.ctx.textBaseline="hanging";var i=this.center.addVector(this.offset);this.ctx.setTransform(this.scale,0,0,this.scale,i.x,i.y);var e,s;for(e=0,s=this.objects.length;s>e;e++)"function"==typeof this.objects[e].preDraw&&this.objects[e].preDraw(this.ctx,this.scale);for(e=0,s=this.objects.length;s>e;e++)this.objects[e].draw(this.ctx,this.scale);for(e=0,s=this.objects.length;s>e;e++)"function"==typeof this.objects[e].postDraw&&this.objects[e].postDraw(this.ctx,this.scale);this.ctx.restore(),"function"==typeof t&&t()},Canvas.prototype.findObjectOnCanvas=function(t){for(var i=!1,e=this.objects.length-1;e>=0;e--){var s=this.objects[e].interaction(this.mousePos,this.scale);if(s!==!1){t(s),i=!0;break}}i||t(null)},Canvas.prototype.moveToCenter=function(t){if(null===this.movingCanvas){var i=this;this.movingCanvas=setInterval(function(){0===i.offset.x&&0===i.offset.y&&(clearInterval(i.movingCanvas),i.movingCanvas=null);var e=i.offset;e=e.div(30),i.offset=i.offset.subVector(e),Math.abs(i.offset.x)<=1&&(i.offset.x=0),Math.abs(i.offset.y)<=1&&(i.offset.y=0),"function"==typeof t&&t(),i.draw()},10)}},Canvas.prototype.interactionStart=function(t,i){clearInterval(this.movingCanvas),this.movingCanvas=null,this.mousePos=new Vector2D(t.pageX,t.pageY),this.mousePos=this.mousePos.subVector(this.margin),this.mousePos=this.mousePos.subVector(this.center),this.mousePos=this.mousePos.subVector(this.offset);var e=this.mousePos,s=this.offset;this.findObjectOnCanvas(function(t){var h=t;null===h&&(h="self",e=e.addVector(s)),"function"==typeof i&&i(h,e)})},Canvas.prototype.interactionMove=function(t,i){var e=new Vector2D(t.pageX,t.pageY);e=e.subVector(this.margin),e=e.subVector(this.center);var s=e.subVector(this.mousePos);this.mousePos=e,"self"===this.selected?(this.offset=this.offset.addVector(s),this.draw()):null!==this.selected&&(this.startPos=this.startPos.addVector(s),this.mousePos=this.mousePos.subVector(this.offset),i(this.selected,this.mousePos.mul(1/this.scale)))},Canvas.prototype.interactionStop=function(t){t(this.startPos.length()<=10?this.selected:null),this.startPos=new Vector2D(0,0),this.selected=null,this.mousePos=new Vector2D(0,0)};
//# sourceMappingURL=data:application/json;base64,
